/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.Proveedor;
import bean.Articulo;
import bean.AuditoriaSistema;
import bean.CategoriaArticulo;
import bean.DetalleOrdenCompra;
import bean.ProductoServicio;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.EventQueue;
import java.beans.Beans;
import java.nio.charset.CodingErrorAction;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author tammy
 */
public class ArticuloCreate extends javax.swing.JFrame {
    private char ch;
    private int resp;
  private int id, cod;
  public static String cate;
 private final  TextAutoCompleter textAutoCompleter1;
 // private final  TextAutoCompleter textAutoCompleter2;
 //  private final  TextAutoCompleter textAutoCompleter3;
  
    public ArticuloCreate() {
        initComponents();
     this.textAutoCompleter1 = new TextAutoCompleter(tf_proveedor);
    //  this.textAutoCompleter2 = new TextAutoCompleter(tf_proveedor2);
    //   this.textAutoCompleter3 = new TextAutoCompleter(tf_proveedor3);
        //infijo
        
        this.textAutoCompleter1.setMode(0);
     //   this.textAutoCompleter2.setMode(0);
      //  this.textAutoCompleter3.setMode(0);
        inicializarLista1();
//       inicializarLista2();
       // inicializarLista3();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT a FROM Articulo a");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        proveedorRenderizar1 = new renderizar.ProveedorRenderizar();
        proveedorQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Proveedor p");
        proveedorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : proveedorQuery.getResultList();
        categArticuloRenderizar1 = new renderizar.CategArticuloRenderizar();
        categoriaArticuloQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM CategoriaArticulo c");
        categoriaArticuloList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : categoriaArticuloQuery.getResultList();
        jPanel3 = new javax.swing.JPanel();
        lbl_registrarC = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbl_nombre = new javax.swing.JLabel();
        precioLabel = new javax.swing.JLabel();
        cantidadMinimaLabel = new javax.swing.JLabel();
        codigoProveedorLabel = new javax.swing.JLabel();
        tf_nombre = new javax.swing.JTextField();
        tf_cantidadMinima = new javax.swing.JTextField();
        tf_costo = new javax.swing.JTextField();
        tf_proveedor = new javax.swing.JTextField();
        cantidadMaximaLabel1 = new javax.swing.JLabel();
        tf_cantidadMaxima = new javax.swing.JTextField();
        combocat = new javax.swing.JComboBox();
        codigoProveedorLabel1 = new javax.swing.JLabel();
        btn_aceptar = new javax.swing.JButton();
        precioLabel1 = new javax.swing.JLabel();
        tf_precio = new javax.swing.JTextField();
        codigoProveedorLabel2 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        btn_cancelar3 = new javax.swing.JButton();
        btn_guardar3 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        proveedorRenderizar1.setText("proveedorRenderizar1");

        categArticuloRenderizar1.setText("categArticuloRenderizar1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_registrarC.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_registrarC.setForeground(new java.awt.Color(255, 255, 255));
        lbl_registrarC.setText("Crear Articulo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_registrarC)
                .addGap(163, 163, 163))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_registrarC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_nombre.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_nombre.setText("Nombre:");

        precioLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        precioLabel.setText("Costo:");

        cantidadMinimaLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        cantidadMinimaLabel.setText("Cantidad Minima:");

        codigoProveedorLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        codigoProveedorLabel.setText("Categoria:");

        tf_nombre.addFocusListener(formListener);
        tf_nombre.addKeyListener(formListener);

        tf_cantidadMinima.addKeyListener(formListener);

        tf_costo.addKeyListener(formListener);

        tf_proveedor.setEnabled(false);
        tf_proveedor.addKeyListener(formListener);

        cantidadMaximaLabel1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        cantidadMaximaLabel1.setText("Cantidad Maxima:");

        tf_cantidadMaxima.addFocusListener(formListener);
        tf_cantidadMaxima.addKeyListener(formListener);

        combocat.setRenderer(categArticuloRenderizar1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, categoriaArticuloList, combocat);
        bindingGroup.addBinding(jComboBoxBinding);

        combocat.addActionListener(formListener);
        combocat.addFocusListener(formListener);

        codigoProveedorLabel1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        codigoProveedorLabel1.setText("Proveedor:");

        btn_aceptar.setText("Seleccionar");
        btn_aceptar.addActionListener(formListener);

        precioLabel1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        precioLabel1.setText("Precio:");

        tf_precio.setEnabled(false);
        tf_precio.addKeyListener(formListener);

        codigoProveedorLabel2.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        codigoProveedorLabel2.setText("Tipo:");

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Insumo ", "Venta" }));
        comboTipo.addFocusListener(formListener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(precioLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tf_costo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(373, 373, 373))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_nombre)
                                    .addComponent(cantidadMinimaLabel)
                                    .addComponent(codigoProveedorLabel))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tf_cantidadMinima, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tf_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(combocat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btn_aceptar)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cantidadMaximaLabel1)
                                                    .addComponent(precioLabel1)
                                                    .addComponent(codigoProveedorLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(tf_precio, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                                    .addComponent(tf_cantidadMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(comboTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                            .addComponent(codigoProveedorLabel1))
                        .addContainerGap(55, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nombre)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadMinimaLabel)
                    .addComponent(tf_cantidadMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidadMaximaLabel1)
                    .addComponent(tf_cantidadMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoProveedorLabel)
                    .addComponent(combocat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoProveedorLabel2)
                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precioLabel)
                    .addComponent(tf_costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precioLabel1)
                    .addComponent(tf_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_aceptar)
                    .addComponent(codigoProveedorLabel1)
                    .addComponent(tf_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_cancelar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar3.setText("Cancelar");
        btn_cancelar3.addActionListener(formListener);

        btn_guardar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        btn_guardar3.setText("Guardar");
        btn_guardar3.addActionListener(formListener);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btn_guardar3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(btn_cancelar3)
                .addGap(34, 34, 34))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btn_cancelar3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_guardar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(46, 46, 46))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == combocat) {
                ArticuloCreate.this.combocatActionPerformed(evt);
            }
            else if (evt.getSource() == btn_aceptar) {
                ArticuloCreate.this.btn_aceptarActionPerformed(evt);
            }
            else if (evt.getSource() == btn_cancelar3) {
                ArticuloCreate.this.btn_cancelar3ActionPerformed(evt);
            }
            else if (evt.getSource() == btn_guardar3) {
                ArticuloCreate.this.btn_guardar3ActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == combocat) {
                ArticuloCreate.this.combocatFocusLost(evt);
            }
            else if (evt.getSource() == tf_nombre) {
                ArticuloCreate.this.tf_nombreFocusLost(evt);
            }
            else if (evt.getSource() == tf_cantidadMaxima) {
                ArticuloCreate.this.tf_cantidadMaximaFocusLost(evt);
            }
            else if (evt.getSource() == comboTipo) {
                ArticuloCreate.this.comboTipoFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == tf_nombre) {
                ArticuloCreate.this.tf_nombreKeyTyped(evt);
            }
            else if (evt.getSource() == tf_cantidadMinima) {
                ArticuloCreate.this.tf_cantidadMinimaKeyTyped(evt);
            }
            else if (evt.getSource() == tf_costo) {
                ArticuloCreate.this.tf_costoKeyTyped(evt);
            }
            else if (evt.getSource() == tf_proveedor) {
                ArticuloCreate.this.tf_proveedorKeyTyped(evt);
            }
            else if (evt.getSource() == tf_cantidadMaxima) {
                ArticuloCreate.this.tf_cantidadMaximaKeyTyped(evt);
            }
            else if (evt.getSource() == tf_precio) {
                ArticuloCreate.this.tf_precioKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btn_cancelar3ActionPerformed

    private void btn_guardar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardar3ActionPerformed
        // TODO add your handling code here:
        //int min= Integer.parseInt(null)
      
     
        if(tf_nombre.getText().length()==0 || tf_cantidadMinima.getText().length()==0 || tf_cantidadMaxima.getText().length()==0
            || tf_costo.getText().length()==0
         || tf_proveedor.getText().length()==0
           ||combocat.getSelectedIndex()<-1 ||comboTipo.getSelectedIndex()<-1 
            ){
            JOptionPane.showMessageDialog(null,"No se permiten campos con valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
            return;
            }
        
        else {
              
               resp=  JOptionPane.showConfirmDialog(null,"Desea Registrar una nuevo articulo?", "Confirmar Creación",JOptionPane.YES_NO_OPTION );
               if (resp==JOptionPane.YES_OPTION){
                   int cantS=0;
                   Articulo a=new Articulo();
                   a.setNombre(tf_nombre.getText().toLowerCase());
                   a.setCantidadMinima(Integer.parseInt(tf_cantidadMinima.getText()));
                   a.setCantidadMaxima(Integer.parseInt(tf_cantidadMaxima.getText()));
                   a.setCosto(Integer.parseInt(tf_costo.getText()));
                   a.setPrecio(Integer.parseInt(tf_precio.getText()));
                   a.setTipo(comboTipo.getSelectedItem().toString());
                    CategoriaArticulo c=(CategoriaArticulo) combocat.getSelectedItem();
                    
                   a.setCodCategoria(c);
                  
                
                       Proveedor p1=(Proveedor) obtenerProveedor(tf_proveedor.getText()) ;
                   a.setCodigoProveedor(p1);
                   a.setCantidadStock(cantS);
                   entityManager.getTransaction().begin();
                   entityManager.persist(a);
                   entityManager.flush();
                   
                    //registramos los datos necesarios para la auditoria
                    entityManager.persist(registrarAuditoria("Crear","Articulo", "No hay cambios", a.toString()));
                   
                   //genera detalle de la orden de compra
                   DetalleOrdenCompra detalleOC= new DetalleOrdenCompra();
                   detalleOC.setCantidadPedida(Integer.parseInt(tf_cantidadMaxima.getText()));
                   detalleOC.setCodArticulo(a);
                  // detalleOC.setCodProveedor(p1);
                   detalleOC.setEstado("pendiente");
                   entityManager.persist(detalleOC);
                   entityManager.flush();
                
                   if (comboTipo.getSelectedItem()=="Venta"){
                   //registra producto/servicio
                   ProductoServicio prod = new ProductoServicio();
                   prod.setCosto(Integer.parseInt(tf_precio.getText()));
                   prod.setNombre(tf_nombre.getText().toLowerCase());
                   entityManager.persist(prod);
                   entityManager.flush();
                    //registramos los datos necesarios para la auditoria
                    entityManager.persist(registrarAuditoria("Crear","Producto", "No hay cambios", prod.toString()));
                   }
                   
                   
                    entityManager.getTransaction().commit();
                   // entityManager.close();
                    JOptionPane.showMessageDialog(null,"Creación exitosa", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
                    vaciar();
               }
        }
        //this.dispose();   
        
    }//GEN-LAST:event_btn_guardar3ActionPerformed

    private void tf_proveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_proveedorKeyTyped
        // TODO add your handling code here:
        ch=evt.getKeyChar();
        if(Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_proveedorKeyTyped

    private void tf_costoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_costoKeyTyped
        // TODO add your handling code here:
        int limite=6;
        if(tf_costo.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_costoKeyTyped

    private void tf_cantidadMinimaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadMinimaKeyTyped
        // TODO add your handling code here:
        int limite=4;
        if(tf_cantidadMinima.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_tf_cantidadMinimaKeyTyped

    private void tf_cantidadMaximaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadMaximaKeyTyped
        // TODO add your handling code here:
        int limite=4;
        if(tf_cantidadMaxima.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_tf_cantidadMaximaKeyTyped

    private void combocatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combocatActionPerformed
        // TODO add your handling code here:
     //    CategoriaArticulo c=(CategoriaArticulo) combocat.getSelectedItem();
                  //setCodCategoria(c);
               

    }//GEN-LAST:event_combocatActionPerformed

    private void combocatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combocatFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_combocatFocusLost

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        // TODO add your handling code here:
          CategoriaArticulo c1=(CategoriaArticulo) combocat.getSelectedItem();
         cate= c1.getDescripcion();
          // System.out.print(cate);
        new ArticuloCrearDialogo(this, true).setVisible(true);
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void tf_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_nombreKeyTyped
        // TODO add your handling code here:
         int limite=45;
        if(tf_nombre.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
       /* ch=evt.getKeyChar();
        if(Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
    }  */
    }//GEN-LAST:event_tf_nombreKeyTyped

    private void tf_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_precioKeyTyped
        // TODO add your handling code here:
         int limite=6;
        if(tf_precio.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_precioKeyTyped

    private void tf_nombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_nombreFocusLost
        // TODO add your handling code here:
        query=entityManager.createNamedQuery("Articulo.findByNombre");
               query.setParameter("nombre", tf_nombre.getText().toLowerCase());
               List<Articulo> art=query.getResultList();
               if(art.size()!=0){
                   JOptionPane.showMessageDialog(null,"El nombre del articulo ya ha sido registrado", "Error",JOptionPane.ERROR_MESSAGE);
                   tf_nombre.setText(null);
                   tf_nombre.requestFocus();
                  // return;
               }
    }//GEN-LAST:event_tf_nombreFocusLost

    private void tf_cantidadMaximaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cantidadMaximaFocusLost
        // TODO add your handling code here:
        if (  Integer.parseInt(tf_cantidadMinima.getText())> Integer.parseInt(tf_cantidadMaxima.getText())){
          JOptionPane.showMessageDialog(null,"La cantidad maxima debe ser mayor a la minima", "Error",JOptionPane.ERROR_MESSAGE);
          tf_cantidadMinima.setText(null);
          tf_cantidadMaxima.setText(null);
          tf_cantidadMinima.requestFocus();
        // return;
      }
    }//GEN-LAST:event_tf_cantidadMaximaFocusLost

    private void comboTipoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboTipoFocusLost
        // TODO add your handling code here:
        if (comboTipo.getSelectedItem()=="Venta"){
                   //registra producto/servicio
                  tf_precio.setEnabled(true);
                  
                   }
        else{
            tf_precio.setText(String.valueOf(0));
        }
            
    }//GEN-LAST:event_comboTipoFocusLost

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_cancelar3;
    private javax.swing.JButton btn_guardar3;
    private javax.swing.JLabel cantidadMaximaLabel1;
    private javax.swing.JLabel cantidadMinimaLabel;
    private renderizar.CategArticuloRenderizar categArticuloRenderizar1;
    private java.util.List<bean.CategoriaArticulo> categoriaArticuloList;
    private javax.persistence.Query categoriaArticuloQuery;
    private javax.swing.JLabel codigoProveedorLabel;
    private javax.swing.JLabel codigoProveedorLabel1;
    private javax.swing.JLabel codigoProveedorLabel2;
    private javax.swing.JComboBox comboTipo;
    public static javax.swing.JComboBox combocat;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_registrarC;
    private java.util.List<bean.Articulo> list;
    private javax.swing.JLabel precioLabel;
    private javax.swing.JLabel precioLabel1;
    private java.util.List<bean.Proveedor> proveedorList;
    private javax.persistence.Query proveedorQuery;
    private renderizar.ProveedorRenderizar proveedorRenderizar1;
    private javax.persistence.Query query;
    private javax.swing.JTextField tf_cantidadMaxima;
    private javax.swing.JTextField tf_cantidadMinima;
    private javax.swing.JTextField tf_costo;
    public javax.swing.JTextField tf_nombre;
    private javax.swing.JTextField tf_precio;
    public static javax.swing.JTextField tf_proveedor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArticuloCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArticuloCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArticuloCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArticuloCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new ArticuloCreate();
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
                frame.setTitle("Registrar Articulo");
                
            }
        });
    }
     private Proveedor obtenerProveedor(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByRazonSocial");
        query.setParameter("razonSocial", tf_proveedor.getText());
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
  /*        private Proveedor obtenerProveedor2(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByRazonSocial");
        query.setParameter("razonSocial", tf_proveedor2.getText());
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
     private Proveedor obtenerProveedor3(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByRazonSocial");
        query.setParameter("razonSocial", tf_proveedor3.getText());
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
*/
    private void inicializarLista1(){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findAll");
        List<Proveedor> pro = query.getResultList();
        Iterator <Proveedor> it = pro.iterator();
        while (it.hasNext()){
            textAutoCompleter1.addItem(it.next().getRazonSocial());
       //     textAutoCompleter1.addItem(it.next().getRazonSocial());
       //     textAutoCompleter2.addItem(it.next().getRazonSocial());
        }
        ema.close();
    }
   /*
    private void inicializarLista2(){
        CategoriaArticulo c=(CategoriaArticulo) combocat.getSelectedItem();
                    
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByCodigoCategoria");
        query.setParameter("codigoCategoria",c );
        List<Proveedor> pro = query.getResultList();
        Iterator <Proveedor> it = pro.iterator();
        while (it.hasNext()){
         //   textAutoCompleter.addItem(it.next().getRazonSocial());
            textAutoCompleter1.addItem(it.next().getRazonSocial());
           combo.addItem(it.next().getRazonSocial());
         //   textAutoCompleter2.addItem(it.next().getRazonSocial());
        }
        ema.close();
    }
  */   
     
 /*   private void inicializarLista3(){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findAll");
        List<Proveedor> pro = query.getResultList();
        Iterator <Proveedor> it = pro.iterator();
        while (it.hasNext()){
           // textAutoCompleter.addItem(it.next().getRazonSocial());
          //  textAutoCompleter1.addItem(it.next().getRazonSocial());
            textAutoCompleter3.addItem(it.next().getRazonSocial());
        }
        ema.close();
    }
*/
    
     public static AuditoriaSistema registrarAuditoria(String accion,String tab, String antes, String despues){
         AuditoriaSistema as=new AuditoriaSistema();
                    as.setAccion(accion);
                    as.setTabla(tab);
                    as.setAntes(antes);
                    as.setDespues(despues);
                     //trabajamos con la fecha
                    Date fechaAuditoria=new Date();
                    DateFormat formato1=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                    as.setFechaHora((formato1.format(fechaAuditoria)));
                    as.setUsuario(LoginView.nombreUsuario);
                    return as;
    }
     public void vaciar(){

                tf_nombre.setText(" ");
                tf_cantidadMinima.setText(" ");
                tf_cantidadMaxima.setText(" ");
                tf_costo.setText(" ");
                tf_proveedor.setText(" ");
                tf_precio.setText(" ");
               
 
     }
}
