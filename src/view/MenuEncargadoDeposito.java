/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MenuEncargadoDeposito.java
 *
 * 
 */

package view;

import bean.AuditoriaSistema;
import bean.DetalleOrdenCompra;
import bean.OrdenCompra;
import bean.Proveedor;
import bean.Rol;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author tammy
 */
public class MenuEncargadoDeposito extends javax.swing.JFrame {
    public static int opcion=0;
    public int i,j,k,resp, codigo;
    public int proveedor;

    /** Creates new form MenuAdminSist */
    public MenuEncargadoDeposito() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        proveedorQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Proveedor p");
        proveedorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(proveedorQuery.getResultList());
        detalleOrdenCompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DetalleOrdenCompra d");
        detalleOrdenCompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(detalleOrdenCompraQuery.getResultList());
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT o FROM OrdenCompra o");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_ordenCompra = new javax.swing.JMenu();
        menu_modifOC = new javax.swing.JMenuItem();
        menu_visualizarOC = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        menu_articulo = new javax.swing.JMenu();
        mitem_crearArt = new javax.swing.JMenuItem();
        mitem_modifArt = new javax.swing.JMenuItem();
        miItem_buscarArticulo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        menu_salir = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("File");
        jMenuBar3.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar3.add(jMenu5);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Menu Administrador del Sistema");

        jMenuBar1.setBackground(new java.awt.Color(211, 219, 227));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        menu_ordenCompra.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_ordenCompra.setText("Ordenes de Compra");
        menu_ordenCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_ordenCompraMouseClicked(evt);
            }
        });

        menu_modifOC.setText("Modificar Orden Compra");
        menu_modifOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_modifOCActionPerformed(evt);
            }
        });
        menu_ordenCompra.add(menu_modifOC);

        menu_visualizarOC.setText("Visualizar Ordenes de Compras");
        menu_visualizarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_visualizarOCActionPerformed(evt);
            }
        });
        menu_ordenCompra.add(menu_visualizarOC);

        jMenuItem7.setText("Generar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        menu_ordenCompra.add(jMenuItem7);

        jMenuBar1.add(menu_ordenCompra);

        jMenu6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu6.setText("Informe de Recepcion");
        jMenu6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu6ActionPerformed(evt);
            }
        });

        jMenuItem5.setText("Generar /Eliminar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem5);

        jMenuItem6.setText("Buscar");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem6);

        jMenuBar1.add(jMenu6);

        jMenu7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu7.setText("Categoria Articulo");

        jMenuItem8.setText("Crear ");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenuItem9.setText("Modificar/Eliminar");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem9);

        jMenuItem11.setText("Buscar");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenuBar1.add(jMenu7);

        menu_articulo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_articulo.setText("Articulos");

        mitem_crearArt.setText("Crear");
        mitem_crearArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_crearArtActionPerformed(evt);
            }
        });
        menu_articulo.add(mitem_crearArt);

        mitem_modifArt.setText("Modificar/Eliminar");
        mitem_modifArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_modifArtActionPerformed(evt);
            }
        });
        menu_articulo.add(mitem_modifArt);

        miItem_buscarArticulo.setText("Buscar");
        miItem_buscarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miItem_buscarArticuloActionPerformed(evt);
            }
        });
        menu_articulo.add(miItem_buscarArticulo);

        jMenuBar1.add(menu_articulo);

        jMenu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu2.setText("Proveedor");

        jMenuItem1.setText("Registrar ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Modificar/Eliminar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem4.setText("Buscar ");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu8.setText("Movimiento Articulo");

        jMenuItem12.setText("Registrar Extraccion ");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem12);

        jMenuItem13.setText("Modificar/Eliminar");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem13);

        jMenuItem14.setText("Buscar");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem14);

        jMenuBar1.add(jMenu8);

        menu_salir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_salir.setText("Salir");
        menu_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_salirMouseClicked(evt);
            }
        });
        menu_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_salirActionPerformed(evt);
            }
        });
        jMenuBar1.add(menu_salir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 774, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**/
    private void menu_salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_salirMouseClicked

            // TODO add your handling code here:
            EntityManagerFactory fact=Persistence.createEntityManagerFactory("proyectoPU");
            EntityManager ema= fact.createEntityManager();
            ema.getTransaction().begin();
            //registramos los datos necesarios para la auditoria
            AuditoriaSistema as=new AuditoriaSistema();
            as.setAccion("Cerro Sesion");
            as.setTabla("Ninguna");
            //trabajamos con la fecha
            Date fecha=new Date();
            DateFormat formato=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
            as.setFechaHora(formato.format(fecha));
            as.setUsuario(LoginView.nombreUsuario);
            ema.persist(as);
            ema.getTransaction().commit();
            ema.close();
            this.setVisible(false);
            String args[]=new String[1];
            args[0]="Ingreso al sistema";
            LoginView.main(args);
    }//GEN-LAST:event_menu_salirMouseClicked

    private void mitem_crearArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_crearArtActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Crear Articulo";
        ArticuloCreate.main(args);
    }//GEN-LAST:event_mitem_crearArtActionPerformed

    private void miItem_buscarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miItem_buscarArticuloActionPerformed
        // TODO add your handling code here:
      opcion = 3;
       String args[]=new String[1];
        args[0]="Buscar Articulo";
        ArticuloBuscar.main(args);
      
    }//GEN-LAST:event_miItem_buscarArticuloActionPerformed

    private void mitem_modifArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_modifArtActionPerformed

       // TODO add your handling code here:
       
        String args[]=new String[1];
        args[0]="Modificar/Eliminar Articulo";
        ArticuloModificarEliminar.main(args);
      
    }//GEN-LAST:event_mitem_modifArtActionPerformed

    private void menu_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_salirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_salirActionPerformed

    private void menu_modifOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_modifOCActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Modificar Orden de Compra";
       OrdenDeCompra.main(args);
    }//GEN-LAST:event_menu_modifOCActionPerformed

    private void menu_visualizarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_visualizarOCActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Ver Orden Compra";
       OrdenDeCompraVizualizar.main(args);
    }//GEN-LAST:event_menu_visualizarOCActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Crear Proveedor";
        ProveedorCreate.main(args);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         
        String args[]=new String[1];
        args[0]="Modificar proveedor";
        ProveedorModificarEliminar.main(args);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
         opcion = 3;
        String args[]=new String[1];
        args[0]="Buscar proveedor";
        ProveedorBuscar.main(args);

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
      
        String args[]=new String[1];
        args[0]="Informe Recepcion";
       InformeRecepcionRegistrar.main(args);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Buscar Informe Recepcion";
       InformeRecepcionVisualizar.main(args);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenu6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu6ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
                
        String args[]=new String[1];
        args[0]="Registrar Categoria Articulo";
       CategArticuloCreate.main(args);

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
      
        String args[]=new String[1];
        args[0]="Buscar Categoria Articulo";
       CategArticuloBuscar.main(args);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
     
        String args[]=new String[1];
        args[0]="Modificar/Eliminar Categoria Articulo";
        CategArticuloModifEliminar.main(args);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        String args[]=new String[1];
        args[0]="Registrar Extraccion de Articulo";
       MovimientoArticuloRegistrar.main(args);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
            
        String args[]=new String[1];
        args[0]="Buscar Movimiento de Articulo";
       MovimientoArticuloBuscar.main(args);
 
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
      
        String args[]=new String[1];
        args[0]="Modificar/Eliminar Movimiento de Articulo";
        MovimientoArticuloModificarEliminar.main(args);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void menu_ordenCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_ordenCompraMouseClicked
     
               
    }//GEN-LAST:event_menu_ordenCompraMouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
           // GENERAR ORDENES DE COMPRA
          resp=  JOptionPane.showConfirmDialog(null,"Desea Registrar las ordenes de compra?", "Confirmar Creación",JOptionPane.YES_NO_OPTION );
               if (resp==JOptionPane.YES_OPTION){
        crearOrdenCompra();     
      //  generarOrdenCompra();
      /*      for(i=0;i<proveedorList.size();i++){
           // System.out.print(proveedorList.get(i).getCodigoProveedor());
           // System.out.print(proveedorList.get(i).getRazonSocial());
            proveedor=proveedorList.get(i).getCodigoProveedor();
            Proveedor p = obtenerProveedor(proveedor);
            generacionOrdenCompra(proveedor);
            }*/}
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(final String args[]) {
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new MenuEncargadoDeposito();
                frame.setTitle("Menu Encargado");
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }
        });
    }
     private Proveedor obtenerProveedor(int codigo){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByCodigoProveedor");
        query.setParameter("codigoProveedor", codigo);
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
public void generarOrdenCompra(){
 List<Integer> lista  = new ArrayList<Integer>() ;
 //lista.clear();
for(i=0;i<proveedorList.size();i++){
    proveedor=proveedorList.get(i).getCodigoProveedor();
//entityManager.getTransaction().begin();
  //  System.out.print(proveedor);
        detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "+
                                                      "where cod_proveedor="+proveedor, DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      
     // if (!cps.isEmpty()){
         
        // System.out.print("es "+cps.get(i).getCodProveedor()+"  ");
         if (!cps.isEmpty()){
     //         System.out.print("es "+cps.toString()+"  ");
             
        
     // System.out.print("es "+proveedor+"  ");
        Proveedor p = obtenerProveedor(proveedor);
       
        Date fecha=new Date();
             //System.out.print("es "+cps.get(i).getCodDetalle()+"  ");
        DateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
        for (k=0;k<cps.size();k++){
           //  oc.setDetalle((cps.get(i).getCodDetalle(), k));
//cps.get(i).getCodDetalle());
            lista.add(k,cps.get(k).getCodDetalle() );
          //  oc.setDetalle(lista.add(k,cps.get(k).getCodDetalle() ));
          System.out.print("es "+lista.get(k)+"  ");
           
        }entityManager.getTransaction().begin();
        OrdenCompra oc = new OrdenCompra();
         oc.setCodProveedor(p);
     // oc.setDetalle(lista.toString());
      //   oc.setDetalle(lista.toString());
         //oc.setDetalle(lista.toString());
       // oc.setDetalle(lista.add(k,cps.get(k).getCodDetalle() );
         oc.setFecha(formato.format(fecha));
          lista.clear();
         entityManager.persist(oc);
         entityManager.flush();
        entityManager.getTransaction().commit();
       }}
        entityManager.close();
           JOptionPane.showMessageDialog(null,"generacion exitosa", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
             
    }




             /*        for(i=0;i<proveedorList.size();i++){
    proveedor=proveedorList.get(i).getCodigoProveedor();

         entityManager.getTransaction().begin();
        OrdenCompra oc = new OrdenCompra();
      
        Proveedor p = obtenerProveedor(proveedor);
        oc.setCodProveedor(p);
        Date fecha=new Date();
        DateFormat formato=new SimpleDateFormat("yyyy-MM-dd");
             oc.setDetalle(null);
        oc.setFecha(formato.format(fecha));
          
         entityManager.persist(oc);
                   entityManager.flush();
                    

                      entityManager.getTransaction().commit();
                         }
                    entityManager.close();*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<bean.DetalleOrdenCompra> detalleOrdenCompraList;
    private javax.persistence.Query detalleOrdenCompraQuery;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private java.util.List<bean.OrdenCompra> list;
    private javax.swing.JMenu menu_articulo;
    private javax.swing.JMenuItem menu_modifOC;
    private javax.swing.JMenu menu_ordenCompra;
    private javax.swing.JMenu menu_salir;
    private javax.swing.JMenuItem menu_visualizarOC;
    private javax.swing.JMenuItem miItem_buscarArticulo;
    private javax.swing.JMenuItem mitem_crearArt;
    private javax.swing.JMenuItem mitem_modifArt;
    private java.util.List<bean.Proveedor> proveedorList;
    private javax.persistence.Query proveedorQuery;
    private javax.persistence.Query query;
    // End of variables declaration//GEN-END:variables

    private void generacionOrdenCompra(int prov) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    String q;
        //q="SELECT * FROM  "+ "WHERE numFactura= "+numFact;
        q= "select * from detalle_orden_compra "+"where cod_proveedor= "+prov;
        System.out.println(q);
        detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "+
                                                      "where cod_proveedor="+prov, DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      if (!cps.isEmpty()){
      System.out.println(cps.get(0));
      detalleOrdenCompraList.clear();
     detalleOrdenCompraList.addAll(cps);
      }
    }

    private void crearOrdenCompra() {
    
 for(i=0;i<proveedorList.size();i++){
    proveedor=proveedorList.get(i).getCodigoProveedor();
    detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "
                                                        +"where estado= 'pendiente' "
                                                     + "and cod_proveedor="+proveedor, DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      
      if (!cps.isEmpty()){
        Proveedor p = obtenerProveedor(proveedor);
        Date fecha=new Date();
        DateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
        
        entityManager.getTransaction().begin();
        OrdenCompra oc = new OrdenCompra();
        oc.setCodProveedor(p);
        oc.setFecha(formato.format(fecha));
        
        entityManager.persist(oc);
        entityManager.flush();
        codigo= oc.getCodOrden();
        actualizarDetalleOrdenCompra(oc, proveedor);
        entityManager.getTransaction().commit();
       }}
        entityManager.close();
           JOptionPane.showMessageDialog(null,"generacion exitosa", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
              
    
    
    }

    private void actualizarDetalleOrdenCompra(OrdenCompra codigoOrden, int prov) {
        //DetalleOrdenCompra doc = new DetalleOrdenCompra();
        
        detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "
                                                      +"where estado= 'pendiente' "
                                                    +"and cod_proveedor="+prov, DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      if (!cps.isEmpty()){
          for (i=0;i<cps.size();i++){
           //   System.out.print(cps.get(i).getCodDetalle());
           //   System.out.print(cps.get(i).getCodArticulo());
            //  System.out.print(cps.get(i).getCodProveedor());
            //  System.out.print(cps.get(i).getCantidadPedida());
            //  System.out.print(cps.get(i).getEstado());
              DetalleOrdenCompra doc = new DetalleOrdenCompra();
              doc.setCantidadPedida(cps.get(i).getCantidadPedida());
              doc.setCodArticulo(cps.get(i).getCodArticulo());
              doc.setCodDetalle(cps.get(i).getCodDetalle());
              doc.setCodOrden(codigoOrden);
           //   doc.setCodProveedor(cps.get(i).getCodProveedor());
              doc.setEstado("solicitado");
                        entityManager.merge(doc);
                     entityManager.flush();

          }
      }

    
    
    }
}
