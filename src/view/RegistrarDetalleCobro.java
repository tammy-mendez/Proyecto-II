/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.AuditoriaSistema;
import bean.Banco;
import bean.ConsumoProSer;
import bean.DetalleCobro;
import bean.FacturaCobro;
import bean.NumberToText;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import static view.ConsumoFactura.cps;



/**
 *
 * @author Jorge
 */
public class RegistrarDetalleCobro extends javax.swing.JFrame {
private DetalleCobro dc=new DetalleCobro();
public static String invoca;
private String letras;
private int diferencia;
private FacturaCobro f=new FacturaCobro();
private String condicion;
DateFormat form=new SimpleDateFormat("dd-MM-yyyy");
 Date fecha=new Date();
 DateFormat formato=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
 private final  TextAutoCompleter textAutoCompleter;
    /**
     * Creates new form FormaPago
     */
    public RegistrarDetalleCobro() {
        initComponents();
         this.textAutoCompleter = new TextAutoCompleter(tf_entidad);
        //infijo
        this.textAutoCompleter.setMode(0);
        inicializarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DetalleCobro d");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        panel_BuscarRol = new javax.swing.JPanel();
        lbl_BuscarRol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbl_numero = new javax.swing.JLabel();
        tf_numero = new javax.swing.JTextField();
        cb_cheque = new javax.swing.JCheckBox();
        lbl_entidad = new javax.swing.JLabel();
        cb_contado = new javax.swing.JCheckBox();
        cb_tc = new javax.swing.JCheckBox();
        tf_entidad = new javax.swing.JTextField();
        cb_td = new javax.swing.JCheckBox();
        btn_aceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        panel_BuscarRol.setBackground(new java.awt.Color(0, 153, 255));
        panel_BuscarRol.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_BuscarRol.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_BuscarRol.setForeground(new java.awt.Color(255, 255, 255));
        lbl_BuscarRol.setText("Forma de Pago");

        javax.swing.GroupLayout panel_BuscarRolLayout = new javax.swing.GroupLayout(panel_BuscarRol);
        panel_BuscarRol.setLayout(panel_BuscarRolLayout);
        panel_BuscarRolLayout.setHorizontalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BuscarRolLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(lbl_BuscarRol)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        panel_BuscarRolLayout.setVerticalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BuscarRolLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_BuscarRol)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/visa.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        lbl_numero.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_numero.setText("Número Tarjeta/Cheque:");

        tf_numero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_numeroFocusGained(evt);
            }
        });

        cb_cheque.setBackground(new java.awt.Color(0, 153, 255));
        cb_cheque.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        cb_cheque.setText("Cheque");
        cb_cheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb_chequeFocusGained(evt);
            }
        });

        lbl_entidad.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_entidad.setText("Entidad:");

        cb_contado.setBackground(new java.awt.Color(0, 153, 255));
        cb_contado.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        cb_contado.setText("Contado");
        cb_contado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb_contadoFocusGained(evt);
            }
        });

        cb_tc.setBackground(new java.awt.Color(0, 153, 255));
        cb_tc.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        cb_tc.setText("Tarjeta Crédito");
        cb_tc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb_tcFocusGained(evt);
            }
        });

        cb_td.setBackground(new java.awt.Color(0, 153, 255));
        cb_td.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        cb_td.setText("Tarjeta Débito");
        cb_td.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb_tdFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_numero)
                            .addComponent(lbl_entidad))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_entidad, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cb_contado)
                        .addGap(52, 52, 52)
                        .addComponent(cb_tc)
                        .addGap(33, 33, 33)
                        .addComponent(cb_td)
                        .addGap(40, 40, 40)
                        .addComponent(cb_cheque)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_contado)
                            .addComponent(cb_tc)
                            .addComponent(cb_cheque)
                            .addComponent(cb_td))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_numero)
                            .addComponent(tf_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_entidad)
                            .addComponent(tf_entidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(btn_aceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(panel_BuscarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_BuscarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_aceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_tcFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_tcFocusGained
        // TODO add your handling code here:
        cb_contado.setSelected(false);
        cb_cheque.setSelected(false);
        cb_td.setSelected(false);
    }//GEN-LAST:event_cb_tcFocusGained

    private void cb_contadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_contadoFocusGained
        // TODO add your handling code here:
        cb_tc.setSelected(false);
        cb_cheque.setSelected(false);
         cb_td.setSelected(false);
    }//GEN-LAST:event_cb_contadoFocusGained

    private void cb_chequeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_chequeFocusGained
        // TODO add your handling code here:
         cb_tc.setSelected(false);
         cb_contado.setSelected(false);
          cb_td.setSelected(false);
    }//GEN-LAST:event_cb_chequeFocusGained

    private void tf_numeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_numeroFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tf_numeroFocusGained

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        // TODO add your handling code here:
        if(cb_tc.isSelected() || cb_td.isSelected() ||cb_cheque.isSelected() || cb_contado.isSelected()){
             if(cb_tc.isSelected() ){
                if(tf_numero.getText().length()==0 || tf_entidad.getText().length()==0){
                     JOptionPane.showMessageDialog(null,"No se admiten valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
                     return;
                }else{
                     dc.setIdBanco(obtenerBanco(tf_entidad.getText()));
                     dc.setNumeroChTarj(tf_numero.getText());
                     dc.setForma("Tarjeta Credito");
                     entityManager.getTransaction().begin();
                     entityManager.persist(dc);
                     entityManager.flush();
                     registrarAuditoria("Detalle de cobro","Inserción",dc.toString(),null);
                }
           
            }
             if(cb_td.isSelected() ){
                if(tf_numero.getText().length()==0 || tf_entidad.getText().length()==0){
                     JOptionPane.showMessageDialog(null,"No se admiten valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
                     return;
                }else{
                     dc.setIdBanco(obtenerBanco(tf_entidad.getText()));
                     dc.setNumeroChTarj(tf_numero.getText());
                     dc.setForma("Tarjeta Debito");
                     entityManager.getTransaction().begin();
                     entityManager.persist(dc);
                     entityManager.flush();
                     registrarAuditoria("Detalle de cobro","Inserción",dc.toString(),null);
                }
           
            }
       if(cb_cheque.isSelected()){
            if(tf_numero.getText().length()==0 || tf_entidad.getText().length()==0){
                 JOptionPane.showMessageDialog(null,"No se admiten valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
                 return;
            }else{

                 dc.setIdBanco(obtenerBanco(tf_entidad.getText()));
                 dc.setNumeroChTarj(tf_numero.getText());
                 dc.setForma("Cheque");
                 entityManager.getTransaction().begin();
                 entityManager.persist(dc);
                 entityManager.flush();
                 registrarAuditoria("Detalle de cobro","Inserción",dc.toString(),null);
            }
       }
       if(cb_contado.isSelected()){
                dc.setForma("Contado");
                entityManager.getTransaction().begin();
                entityManager.persist(dc);
                entityManager.flush();
                registrarAuditoria("Detalle de cobro","Inserción",dc.toString(),null);
      
       }
        }else{
               JOptionPane.showMessageDialog(null,"Seleccione una forma de pago", "Error",JOptionPane.ERROR_MESSAGE);
               return;
        }
       if("Crear Reserva".equals(invoca)){
           this.dispose();
           generarFactCrearReserva();
           
       }
       if("Editar Reserva".equals(invoca)){
           this.dispose();
           generarFactEditarReserva();
       }
        if("Liquidar Reserva".equals(invoca)){
            this.dispose();
           generarFactLiquidarReserva();
       }
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void cb_tdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_tdFocusGained
        // TODO add your handling code here:
         cb_tc.setSelected(false);
         cb_contado.setSelected(false);
         cb_cheque.setSelected(false);
    }//GEN-LAST:event_cb_tdFocusGained
private void   generarFactCrearReserva(){
           f.setCodigoReserva(CrearReserva.reserva);
           f.setConcepto("anticipo de reserva");
           if("".equals(CrearReserva.reserva.getCodigoCliente().getRuc())){
                  f.setRucCliente(CrearReserva.reserva.getCodigoCliente().getCedula());
           }else{
                   f.setRucCliente(CrearReserva.reserva.getCodigoCliente().getRuc());
                 }
              f.setFechaEmision(formato.format(fecha));
              f.setTotal(Integer.parseInt(Integer.toString(CrearReserva.reserva.getMontoAbonado())));
             
               if("Cheque".equals(dc.getForma()) || "Tarjeta Credito".equals(dc.getForma())
                       || "Tarjeta Debito".equals(dc.getForma())){
                     condicion="Crédito";
                                 
               }else{
                      condicion="Contado";
               } 
              f.setFormaPago(dc);
              f.setTipoFactura(condicion);
              entityManager.persist(f);
              entityManager.flush();
              registrarAuditoria("Factura de cobro","Inserción",f.toString(),null);
              entityManager.getTransaction().commit();
             //verificar la condicion de pago
               try
                  {
                      NumberToText nt=new NumberToText();
                      letras=nt.convertirLetras(f.getTotal());
                      diferencia=CrearReserva.reserva.getMontoTotal()-CrearReserva.reserva.getMontoAbonado();
                      System.out.print(letras);
                      Class.forName("com.mysql.jdbc.Driver");
                      Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "user");
                       HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
                       Map parametros=new HashMap();
                       System.out.print(f.getNumFactura());
                       par.put("Letras", letras);
                       par.put("NumFactura",f.getNumFactura() );
                       par.put("Saldo",diferencia);
                       par.put("Condicion", condicion);
                       JasperPrint jp = JasperFillManager.fillReport("C:/Proyecto-II/src/reportes/facturaAnticipo.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
                       JasperViewer jv = new JasperViewer(jp,false);
                       jv.setVisible(true);
                       jv.setTitle("Factura de Anticipio de Reserva");
                       Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                       jv.setIconImage(icon);
                       jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    }
                       catch(Exception e)
                       {
                          e.printStackTrace();
                        }
}
private void   generarFactEditarReserva(){
            f.setCodigoReserva(ReservaEditar.reservaLocal);
            f.setConcepto("anticipo de reserva");
            if("".equals(ReservaEditar.reservaLocal.getCodigoCliente().getRuc())){
                        f.setRucCliente(ReservaEditar.reservaLocal.getCodigoCliente().getCedula());
           }else{
                        f.setRucCliente(ReservaEditar.reservaLocal.getCodigoCliente().getRuc());
            }
            f.setFechaEmision(formato.format(fecha));
            f.setTotal(ReservaEditar.monto_fac);
            if("Cheque".equals(dc.getForma()) || "Tarjeta Credito".equals(dc.getForma())
                    || "Tarjeta Debito".equals(dc.getForma())){
                             condicion="Crédito";

           }else{
                             condicion="Contado";
           }
            f.setTipoFactura(condicion);
            f.setFormaPago(dc);
            entityManager.persist(f);
            entityManager.flush();
            registrarAuditoria("Factura de cobro","Inserción",f.toString(),null);
            entityManager.getTransaction().commit();
           try
            {
              //convertimos el numero en letras
              NumberToText nt=new NumberToText();
              letras=nt.convertirLetras(f.getTotal());
              diferencia=(ReservaEditar.reservaLocal.getMontoTotal()-ReservaEditar.reservaLocal.getMontoAbonado());
              System.out.print(letras);
              Class.forName("com.mysql.jdbc.Driver");
              Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "user");
              HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
              Map parametros=new HashMap();
              System.out.print(f.getNumFactura());
              par.put("Letras", letras);
              par.put("NumFactura",f.getNumFactura() );
              par.put("Saldo", diferencia);
              par.put("Condicion", condicion);
              JasperPrint jp = JasperFillManager.fillReport("C:/Proyecto-II/src/reportes/facturaAnticipo.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
              JasperViewer jv = new JasperViewer(jp,false);
              jv.setVisible(true);
              jv.setTitle("Factura de Anticipo de Reserva");
              Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
              jv.setIconImage(icon);
              jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
           }
              catch(Exception e)
           {
              e.printStackTrace();
           }
}
private void generarFactLiquidarReserva(){
                    f.setCodigoReserva(ConsumoFactura.r);
                    f.setConcepto("liquidación de reserva");
                    if("".equals(ConsumoFactura.r.getCodigoCliente().getRuc())){
                        f.setRucCliente(ConsumoFactura.r.getCodigoCliente().getCedula());
                    }else{
                          f.setRucCliente(ConsumoFactura.r.getCodigoCliente().getRuc());
                    }
                    f.setFechaEmision(formato.format(fecha));
                     if("Cheque".equals(dc.getForma()) || "Tarjeta Credito".equals(dc.getForma()) 
                             || "Tarjeta Debito".equals(dc.getForma())){
                           condicion="Crédito";

                     }else{
                           condicion="Contado";
                     }
                    f.setTotal(ConsumoFactura.total);
                    f.setTipoFactura(condicion);
                    f.setFormaPago(dc);
                    entityManager.persist(f);
                    System.out.println(f.toString());
                    entityManager.flush();
                     //verificar la condicion de pago
                    registrarAuditoria("Factura de cobro","Inserción",f.toString(),null);
                     // aca llamamos al metodo que va a poner el numero de factura a los detalles
                    actualizarDetalle(f);
                    entityManager.getTransaction().commit();
                    this.dispose();
                    //llamamos al jasper
                      try
                        {
                            NumberToText nt=new NumberToText();
                            letras=nt.convertirLetras(ConsumoFactura.total);
                            System.out.print(letras);
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "user");
                            HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
                            Map parametros=new HashMap();
                            par.put("NumFactura",f.getNumFactura() );
                            par.put("Letras", letras);
                            par.put("Condicion", condicion);
                            JasperPrint jp = JasperFillManager.fillReport("C:/Proyecto-II/src/reportes/facturaLiquidacion.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
                            JasperViewer jv = new JasperViewer(jp,false);
                            jv.setVisible(true);
                            jv.setTitle("Factura de Liquidación de Reserva");
                            Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                            jv.setIconImage(icon);
                            jv.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String  args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarDetalleCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarDetalleCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarDetalleCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarDetalleCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new RegistrarDetalleCobro();
                frame.pack();
                frame.setVisible(true);
                Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                frame.setIconImage(icon);
                frame.setTitle("Forma de Pago");
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            }
        });
    }
      private void actualizarDetalle(FacturaCobro f){
        String antes;
        String despues;
        int i=0;
        for(i=0;i<cps.size();i++){
            antes=cps.get(i).toString();
            ConsumoProSer c=new ConsumoProSer();
            c.setCodigoConsumo(cps.get(i).getCodigoConsumo());
            c.setNumFactura(f);
            c.setTotal(cps.get(i).getTotal());
            c.setCodigoReserva(cps.get(i).getCodigoReserva());
            c.setCantidad(cps.get(i).getCantidad());
            c.setCodigoPS(cps.get(i).getCodigoPS());
            c.setFecha(form.format(fecha));
            entityManager.merge(c);
            entityManager.flush();
            despues=c.toString();
            registrarAuditoria("Consumo P/S","Modificación",antes,despues);
           
        }
        
    }
      private void registrarAuditoria(String entidad,String accion,String antes, String despues){
          AuditoriaSistema as=new AuditoriaSistema();
                    as.setAccion(accion);
                    as.setTabla(entidad);
                    as.setAntes(antes);
                    if(despues==null){
                        as.setDespues("No hay cambios");
                    } else{
                        as.setDespues(despues);
                    }
                    //trabajamos con la fecha
                    as.setFechaHora(formato.format(fecha));
                    as.setUsuario("nadie");
                    entityManager.persist(as);
                    entityManager.flush();
   }
    private void inicializarLista(){
        query = entityManager.createNamedQuery("Banco.findAll");
        List<Banco> b = query.getResultList();
        Iterator <Banco> it = b.iterator();
        while (it.hasNext()){
            textAutoCompleter.addItem(it.next().getNombre());
        }
    }
    private Banco obtenerBanco(String nombre){
        Banco banco=new Banco();
        query=entityManager.createNamedQuery("Banco.findByNombre");
        query.setParameter("nombre", nombre);
        banco = (Banco) query.getSingleResult();
        return banco;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cb_cheque;
    private javax.swing.JCheckBox cb_contado;
    private javax.swing.JCheckBox cb_tc;
    private javax.swing.JCheckBox cb_td;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_BuscarRol;
    private javax.swing.JLabel lbl_entidad;
    private javax.swing.JLabel lbl_numero;
    private java.util.List<DetalleCobro> list;
    private javax.swing.JPanel panel_BuscarRol;
    private javax.persistence.Query query;
    private javax.swing.JTextField tf_entidad;
    private javax.swing.JTextField tf_numero;
    // End of variables declaration//GEN-END:variables
}
