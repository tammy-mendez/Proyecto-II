/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;
///import bean.Ordendecompra;
import bean.Articulo;
import bean.AuditoriaSistema;
import bean.DetalleFacturacompra;
import bean.DetalleOrdenCompra;
import bean.FacturaPago;
import bean.Informerecepcion;
import bean.OrdenCompra;
import bean.Proveedor;
import java.awt.EventQueue;
import java.beans.Beans;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author tammy
 */
public class InformeRecepcionRegistrar extends javax.swing.JFrame {
private char ch;
    private int resp;
  private int id, k;
  private int fila, valorFila;
  private String numero;
   private int codigo, precio, cantidad, i,  valor,  cantidadPedida, cantidadRecibida;
  private String nombreArticulo;
private static int totalCompra = 0, totaliva=0;
 private int id1,id2, value;

  private int codInf, nroFac, monto;
  private String fecha, fechavto, articulo, cantArticulo,v;
  
    /**
     * Creates new form InfoRecepcion
     */
    public InformeRecepcionRegistrar() {
       initComponents();
       txtIva.setText("0");
       txt_total.setText("0");
        tf_oc.setEnabled(false);
      // txt_num1.setEnabled(false);
     //  txt_num2.setEnabled(false);
       txt_num3.setEnabled(false);
       tf_proveedor.setEnabled(false);
       jf_fechaI.setVisible(false);
       jf_fechaF.setVisible(false);
       txt_num1.setVisible(false);
       txt_num2.setVisible(false);
       tf_fechaFact.setEnabled(false);
       tf_fechaVto.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT i FROM Informerecepcion i");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        facturaPagoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT f FROM FacturaPago f");
        facturaPagoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : facturaPagoQuery.getResultList();
        ordenCompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT o FROM OrdenCompra o");
        ordenCompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(ordenCompraQuery.getResultList());
        detalleOrdenCompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DetalleOrdenCompra d");
        detalleOrdenCompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(detalleOrdenCompraQuery.getResultList());
        articuloQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT a FROM Articulo a");
        articuloList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : articuloQuery.getResultList();
        detalleFacturacompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DetalleFacturacompra d");
        detalleFacturacompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : detalleFacturacompraQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        lbl_oc = new javax.swing.JLabel();
        tf_oc = new javax.swing.JTextField();
        lbl_oc1 = new javax.swing.JLabel();
        btn_detalle = new javax.swing.JButton();
        txt_num1 = new javax.swing.JTextField();
        txt_num2 = new javax.swing.JTextField();
        txt_num3 = new javax.swing.JTextField();
        lbl_oc2 = new javax.swing.JLabel();
        lbl_oc3 = new javax.swing.JLabel();
        jf_fechaI = new com.toedter.calendar.JDateChooser();
        jf_fechaF = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCompra = new javax.swing.JTable();
        txtIva = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tf_articulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_cantidad = new javax.swing.JTextField();
        btn_aceptarModif = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_quitar = new javax.swing.JButton();
        tf_proveedor = new javax.swing.JTextField();
        lbl_oc4 = new javax.swing.JLabel();
        tf_fechaVto = new javax.swing.JTextField();
        tf_fechaFact = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lbl_registrarC = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbl_valor = new javax.swing.JLabel();
        tf_valor = new javax.swing.JTextField();
        lbl_filtro = new javax.swing.JLabel();
        list_filtros = new javax.swing.JComboBox();
        btn_buscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btn_cancelar3 = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbl_oc.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_oc.setText("Nro. Orden Compra: ");

        tf_oc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ocActionPerformed(evt);
            }
        });
        tf_oc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_ocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_ocFocusLost(evt);
            }
        });
        tf_oc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_ocKeyTyped(evt);
            }
        });

        lbl_oc1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_oc1.setText("Nro. Factura Compra: ");

        btn_detalle.setText("Ver Detalle");
        btn_detalle.setEnabled(false);
        btn_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_detalleActionPerformed(evt);
            }
        });

        txt_num1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_num1KeyTyped(evt);
            }
        });

        txt_num2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_num2KeyTyped(evt);
            }
        });

        txt_num3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_num3FocusLost(evt);
            }
        });
        txt_num3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_num3KeyTyped(evt);
            }
        });

        lbl_oc2.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_oc2.setText("Fecha Factura: ");

        lbl_oc3.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_oc3.setText("Fecha Vto. Factura: ");

        jf_fechaI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jf_fechaIFocusLost(evt);
            }
        });

        jf_fechaF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jf_fechaFFocusLost(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Detalle Compra", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        tablaCompra.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        tablaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "Precio", "Cantidad Recibida", "Cantidad Pedida", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCompra);

        txtIva.setEnabled(false);
        txtIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIvaActionPerformed(evt);
            }
        });

        jLabel1.setText("Total I.V.A:");

        jLabel3.setText("Total:");

        txt_total.setEditable(false);
        txt_total.setEnabled(false);
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Articulo:");

        tf_articulo.setEnabled(false);

        jLabel4.setText("Cantidad:");

        tf_cantidad.setEnabled(false);
        tf_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_cantidadKeyTyped(evt);
            }
        });

        btn_aceptarModif.setText("Aceptar");
        btn_aceptarModif.setEnabled(false);
        btn_aceptarModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarModifActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(tf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_aceptarModif)
                        .addContainerGap())
                    .addComponent(tf_articulo)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_aceptarModif)
                        .addContainerGap())))
        );

        btn_modificar.setText("Modificar");
        btn_modificar.setEnabled(false);
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_quitar.setText("Quitar");
        btn_quitar.setEnabled(false);
        btn_quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 204, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_quitar)
                        .addGap(20, 20, 20))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_modificar)
                            .addComponent(btn_quitar))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        tf_proveedor.setEnabled(false);
        tf_proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_proveedorActionPerformed(evt);
            }
        });
        tf_proveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_proveedorKeyTyped(evt);
            }
        });

        lbl_oc4.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_oc4.setText("Proveedor");

        tf_fechaVto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fechaVtoActionPerformed(evt);
            }
        });

        tf_fechaFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fechaFactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_detalle)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_oc)
                                    .addComponent(lbl_oc1)
                                    .addComponent(lbl_oc2)
                                    .addComponent(lbl_oc3)
                                    .addComponent(lbl_oc4))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_oc, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_num1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_num2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_num3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_fechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jf_fechaI, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_fechaVto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jf_fechaF, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 499, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_oc)
                    .addComponent(tf_oc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_oc1)
                    .addComponent(txt_num1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_num2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_num3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_oc2)
                        .addComponent(tf_fechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jf_fechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_oc3)
                            .addComponent(tf_fechaVto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_oc4)
                            .addComponent(tf_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jf_fechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(btn_detalle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_registrarC.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_registrarC.setForeground(new java.awt.Color(255, 255, 255));
        lbl_registrarC.setText("Informe de Recepcion ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(191, Short.MAX_VALUE)
                .addComponent(lbl_registrarC)
                .addGap(184, 184, 184))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_registrarC)
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_valor.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        tf_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_valorKeyTyped(evt);
            }
        });

        lbl_filtro.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_filtro.setText("Buscar por:");

        list_filtros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo Informe", "Codigo Orden Compra", "Proveedor" }));
        list_filtros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_filtrosMouseClicked(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        btn_buscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_buscarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbl_filtro)
                .addGap(18, 18, 18)
                .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(lbl_valor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_buscar)
                .addGap(36, 36, 36))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_filtro)
                    .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_valor)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addContainerGap())
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, tabla);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codInformeRecepcion}"));
        columnBinding.setColumnName("Cod Informe Recepcion");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codOC}"));
        columnBinding.setColumnName("Cod OC");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fecha}"));
        columnBinding.setColumnName("Fecha");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaVto}"));
        columnBinding.setColumnName("Fecha Vto");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nroFactura}"));
        columnBinding.setColumnName("Nro Factura");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_cancelar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar3.setText("Cancelar");
        btn_cancelar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar3ActionPerformed(evt);
            }
        });

        btn_aceptar.setText("Guardar");
        btn_aceptar.setEnabled(false);
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/trash.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setEnabled(false);
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_nuevo)
                .addGap(35, 35, 35)
                .addComponent(btn_aceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btn_eliminar)
                .addGap(37, 37, 37)
                .addComponent(btn_cancelar3)
                .addGap(18, 18, 18))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar3)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_aceptar)
                    .addComponent(btn_nuevo)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        // TODO add your handling code here:
        btn_nuevo.setEnabled(true);
        btn_detalle.setEnabled(false);
        numero = (txt_num1.getText()+txt_num2.getText()+txt_num3.getText()).toLowerCase();
       if( txt_num1.getText().length()==0 ||
        txt_num2.getText().length()==0|| txt_num3.getText().length()==0 
               ||jf_fechaI.getAccessibleContext()==null || jf_fechaF.getAccessibleContext()==null
               || tf_oc.getText().length()==0 )
            {
            JOptionPane.showMessageDialog(null,"No se permiten campos con valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
            vaciar();
            return;
            }
       
              else {
           /*id=Integer.parseInt(tf_oc.getText());
                query = entityManager.createNamedQuery("Informerecepcion.findByCodOC");
                query.setParameter("codOC", Integer.parseInt(tf_oc.getText()));
                List<Informerecepcion> inf= query.getResultList();
                if (inf.size()!=0){
                    JOptionPane.showMessageDialog(null,"Ya se registro el informe ", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_oc.setText(null);
                    vaciar();
                    return;
                }*/
                              
                
               resp=  JOptionPane.showConfirmDialog(null,"Desea Registrar una nuevo informe de recepcion y Factura?", "Confirmar Creación",JOptionPane.YES_NO_OPTION );
               if (resp==JOptionPane.YES_OPTION){
          DateFormat formato=new SimpleDateFormat("dd/MM/yyyy");
          DateFormat form=new SimpleDateFormat("dd/MM/yyyy");
          java.util.Date fecha = new Date();
        
          SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                     String d = format.format(jf_fechaI.getDate());
                     String f = format.format(jf_fechaF.getDate());
                     Date fechafact = null;
                     Date fechafactvto = null;
                     try {
                         fechafact = format.parse(d);
                         fechafactvto = format.parse(f);
                       
                     } catch (ParseException ex) {
                         System.out.println("Formateo de fechas fallido");
                     }
                   Informerecepcion i = new Informerecepcion();
                    OrdenCompra oc1 = obtenerOrdenCompra(Integer.valueOf(tf_oc.getText()));
                   i.setCodOC(oc1);
                  // i.setCodOC(Integer.parseInt(tf_oc.getText()));
                   FacturaPago fp1= obtenerFactura(Integer.parseInt(numero));
                   i.setNroFactura(fp1);
                   i.setFecha(d);
                   i.setFechaVto(f);

                   entityManager.getTransaction().begin();
                   entityManager.persist(i);
//                   entityManager.flush();
                    
                 
                 FacturaPago fp=new FacturaPago();
                   fp.setFecha(d);
                 //  fp.setOrdenCompra(Integer.parseInt(tf_oc.getText()));
                   fp.setEstado("pendiente");
                   fp.setMontoTotal(Integer.parseInt(txt_total.getText()));
                   fp.setMontoTotalIva(Integer.parseInt(txtIva.getText()));
                   fp.setNumFactura(Integer.parseInt(numero));
                   fp.setFechaVence(f);
                   Proveedor pr= obtenerProveedor(tf_proveedor.getText());
//                   fp.setCodProveedor(pr);
                   /*******************************/
                   entityManager.persist(fp);
                   //REGISTRAR DETALLE COMPRA
                    int rowCount=tablaCompra.getRowCount();
                    String codArt="",cant="";
                        for (int k = 0; k < rowCount; k++) {
                          // codArt=tablaCompra.getValueAt(k, 0).toString();
                           cant=tablaCompra.getValueAt(k, 2).toString();
                           DetalleFacturacompra de = new DetalleFacturacompra();
                           de.setNumFactura(Integer.parseInt(numero));
                           Articulo art = obtenerArticulo(tablaCompra.getValueAt(k, 0).toString());
                           de.setCodArticulo(art.getCodigoArticulo());
                           de.setCantidad(Integer.parseInt(tablaCompra.getValueAt(k, 3).toString()));
                           entityManager.persist(de);
                           entityManager.flush();
                          
                        }  
                        
                        //Actualizar Detalle Orden Compra
                        for (int k = 0; k < rowCount; k++) {
                          // codArt=tablaCompra.getValueAt(k, 0).toString();
                           cant=tablaCompra.getValueAt(k, 2).toString();
                           articulo=tablaCompra.getValueAt(k, 0).toString();
                           Articulo a= obtenerArticulo(articulo);
                            detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "
                                                      +" where cod_orden= "+Integer.valueOf(tf_oc.getText())+
                                                    " and cod_articulo= "+a.getCodigoArticulo(), DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      if (!cps.isEmpty()){
          for (int j=0;j<cps.size();j++){
              DetalleOrdenCompra doc = new DetalleOrdenCompra();
              doc.setCantidadPedida(cps.get(j).getCantidadPedida());
              doc.setCodArticulo(cps.get(j).getCodArticulo());
              doc.setCodDetalle(cps.get(j).getCodDetalle());
              doc.setCantidadRecibida((Integer.parseInt(tablaCompra.getValueAt(k, 3).toString()))+cps.get(j).getCantidadRecibida());
              OrdenCompra oc2 = obtenerOrdenCompra(Integer.valueOf(tf_oc.getText()));
              doc.setCodOrden(oc2);
             // doc.setCodOrden(oc1);
              //doc.setCodProveedor(cps.get(j).getCodProveedor());
              if (((cps.get(j).getCantidadPedida())-(Integer.parseInt(cant)))==0){
                  doc.setEstado("recibido");
              }
              else{
                  doc.setEstado("recibido/pendiente");
              }
                        entityManager.merge(doc);
                     entityManager.flush();
                         //actualicar stock articulo
                     sumarStock(cps.get(j).getCodArticulo().getCodigoArticulo(), (Integer.parseInt(tablaCompra.getValueAt(k, 3).toString())));
                          
                        }}
                        
                        }     
                    
                        
                        
                        
                    entityManager.persist(registrarAuditoria("Crecion", "Informe Recepcion", i.toString()));
                    entityManager.persist(registrarAuditoria("Crecion","Factura Compra", fp.toString()));
                    entityManager.getTransaction().commit();
                    entityManager.close();
                    JOptionPane.showMessageDialog(null,"Creación exitosa", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
                      vaciar();
                    resp=  JOptionPane.showConfirmDialog(null,"Desea imprimir?", "Confirmar Impresion",JOptionPane.YES_NO_OPTION );
            if (resp==JOptionPane.YES_OPTION){
                imprimir(Integer.parseInt(numero));
            }
            else {
                 JOptionPane.showMessageDialog(null,"Factura Guardada", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
            }
        } 
       }
       this.dispose();
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void tf_ocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ocKeyTyped
        // TODO add your handling code here:
        int limite=4;
        if(tf_oc.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_ocKeyTyped

    private void tf_ocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_ocActionPerformed

    private void txt_num1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_num1KeyTyped
        // TODO add your handling code here:
        int limite=3;
        if(txt_num1.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_txt_num1KeyTyped

    private void txt_num2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_num2KeyTyped
        // TODO add your handling code here:
        int limite=3;
        if(txt_num2.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_txt_num2KeyTyped

    private void txt_num3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_num3KeyTyped
        // TODO add your handling code here:
        int limite=5;
        if(txt_num3.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txt_num3KeyTyped

    private void btn_cancelar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btn_cancelar3ActionPerformed

    private void txtIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIvaActionPerformed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void tf_proveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_proveedorKeyTyped
        // TODO add your handling code here:
        ch=evt.getKeyChar();
        if(Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_proveedorKeyTyped

    private void tf_proveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_proveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_proveedorActionPerformed

    private void tf_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_valorKeyTyped
        // TODO add your handling code here:
        if(list_filtros.getSelectedItem()=="Proveedor" ){
            ch=evt.getKeyChar();
            if(Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
        }else{
            if(list_filtros.getSelectedItem()=="Codigo Informe"){
                ch=evt.getKeyChar();
                if(!Character.isDigit(ch)){
                    getToolkit().beep();
                    evt.consume();
                }
                if(list_filtros.getSelectedItem()=="Codigo Orden Compra"){
                    ch=evt.getKeyChar();
                    if(!Character.isDigit(ch)){
                        getToolkit().beep();
                        evt.consume();
                    }

                }}
            }
    }//GEN-LAST:event_tf_valorKeyTyped

    private void list_filtrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_filtrosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_list_filtrosMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        if (tf_valor.getText().length()==0){
            JOptionPane.showMessageDialog(null,"Ingrese algún valor para efectuar la búsqueda", "Advertencia",JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            if(list_filtros.getSelectedItem()=="Codigo Informe"){
                id1=Integer.parseInt(tf_valor.getText());
                query=entityManager.createNamedQuery( "Informerecepcion.findByCodInformeRecepcion");
                query.setParameter("codInformeRecepcion", id1);
                List<Informerecepcion> a=query.getResultList();
                if (a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Código inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(a);

            }
            if(list_filtros.getSelectedItem()=="Codigo Orden Compra"){
                id2=Integer.parseInt(tf_valor.getText());
                query=entityManager.createNamedQuery( "Informerecepcion.findByCodOC");
                query.setParameter("codOC", id2);
                List<Informerecepcion> a=query.getResultList();
                if (a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Código inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(a);

            }
            if (list_filtros.getSelectedItem()=="Proveedor"){
                query = entityManager.createNativeQuery("select * from informerecepcion inf" +
                    " join orden_compra oc" +
                    " on inf.codOC=oc.cod_orden" +
                    " join proveedor p" +
                    " on p.codigoProveedor=oc.cod_proveedor"+
                    " where p.razonSocial like "+
                    "'%"+tf_valor.getText()+"%'", Informerecepcion.class);
                List<Informerecepcion> ar = query.getResultList();
                if (ar.size()==0){
                    JOptionPane.showMessageDialog(null," Nombre Proveedor Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ar);
            }
        }

        //        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_buscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_buscarFocusLost
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_btn_buscarFocusLost

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
            // TODO add your handling code here:
       
       btn_nuevo.setEnabled(false);
        String valor;
        query = entityManager.createNativeQuery("select * from informerecepcion inf " +
                                "join factura_pago fp " +
                                "on inf.nroFactura=fp.num_factura " +
                                "where fp.estado='pagado' "+
                                "and inf.nroFactura="+
                                Integer.parseInt(txt_num3.getText()),Informerecepcion.class);
         List<Informerecepcion> infor = query.getResultList();
         if (infor.size()==0){
             resp=  JOptionPane.showConfirmDialog(null,"Esta seguro que desea eliminar el informe y la factura de compra?", "Confirmar Eliminación",JOptionPane.YES_NO_OPTION );
            if(resp==JOptionPane.YES_OPTION){ 
                entityManager.getTransaction().begin();
                 //eliminamos la facutura
               facturaPagoQuery = entityManager.createNativeQuery("select * from factura_pago fp " +
                                                       "join informerecepcion inf " +
                                                       "on inf.nroFactura=fp.num_factura "+
                                                        "where inf.nroFactura="
                                                        +Integer.parseInt(txt_num3.getText()), FacturaPago.class);
                List<FacturaPago> fc=facturaPagoQuery.getResultList();
                        if(fc.size()>=1){
                            for(i=0;i<fc.size();i++){
                                valor=fc.get(i).toString();
            //                    obtenerDetalleCompra(fc.get(i).getNumFactura());
                                entityManager.remove(fc.get(i));
                                
                                 registrarAuditoria("Eliminar","Factura",valor);
                            }
                            entityManager.flush();
                         }
                        
                        
                Informerecepcion a=entityManager.find(Informerecepcion.class,codInf );
                valor=a.toString();//guardamos el objeto antes de eliminar
                entityManager.remove(a);
                int rowCount=tablaCompra.getRowCount();
                String cant;
                  //Actualizar Detalle Orden Compra
                        for (int k = 0; k < rowCount; k++) {
                          // codArt=tablaCompra.getValueAt(k, 0).toString();
                           cant=tablaCompra.getValueAt(k, 2).toString();
                           articulo=tablaCompra.getValueAt(k, 0).toString();
                           Articulo artic= obtenerArticulo(articulo);
                            detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "
                                                      +" where cod_orden= "+Integer.valueOf(tf_oc.getText())+
                                                    " and cod_articulo= "+artic.getCodigoArticulo(), DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      if (!cps.isEmpty()){
          for (int j=0;j<cps.size();j++){
                            DetalleOrdenCompra doc = new DetalleOrdenCompra();
              doc.setCantidadPedida(Integer.parseInt(cant));
              doc.setCodArticulo(cps.get(j).getCodArticulo());
              doc.setCodDetalle(cps.get(j).getCodDetalle());
             /* if (cps.get(j).getCantidadRecibida()==0){doc.setCantidadRecibida((Integer.parseInt(tablaCompra.getValueAt(k, 3).toString())));}
              else{}*/
              doc.setCantidadRecibida(cps.get(j).getCantidadRecibida()-(Integer.parseInt(tablaCompra.getValueAt(k, 3).toString())));
              OrdenCompra oc1 = obtenerOrdenCompra(Integer.valueOf(tf_oc.getText()));
              doc.setCodOrden(oc1);
            //  doc.setCodProveedor(cps.get(j).getCodProveedor());
              doc.setEstado("solicitado");
                        entityManager.merge(doc);
                     entityManager.flush();
                         //actualicar stock articulo
                     restarStock(cps.get(j).getCodArticulo().getCodigoArticulo(), (Integer.parseInt(tablaCompra.getValueAt(k, 3).toString())));
                          
                        }}
                        
                        }  
                
                
                
                
                
                //registramos los datos necesarios para la auditoria
                entityManager.persist(registrarAuditoria("Eliminar","Informe Recepcion", valor.toString()));
                entityManager.getTransaction().commit();
                entityManager.close();
                JOptionPane.showMessageDialog(null, "Eliminación Exitosa");
                this.setVisible(false);
            }else{
                this.setVisible(false);
            }
            }
         else {
             JOptionPane.showMessageDialog(null," No se puede eliminar, ya se realizo el pago", "Error",JOptionPane.ERROR_MESSAGE);
         }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        // TODO add your handling code here:
        btn_nuevo.setEnabled(false);
        btn_eliminar.setEnabled(false);
         btn_detalle.setEnabled(true);
         
        tf_fechaFact.setVisible(false);
        tf_fechaVto.setVisible(false);
        tf_oc.setEnabled(true);
        txt_num1.setVisible(true);
       txt_num2.setVisible(true);
       txt_num1.setEnabled(true);
       txt_num2.setEnabled(true);
       txt_num3.setEnabled(true);
       tf_proveedor.setEnabled(false);
       jf_fechaI.setVisible(true);
       jf_fechaF.setVisible(true);
      
     //  tf_fechaFact.setEnabled(false);
    //   tf_fechaVto.setEnabled(false);
       
        vaciar();
        
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tf_fechaVtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fechaVtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fechaVtoActionPerformed

    private void tf_fechaFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fechaFactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fechaFactActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
       
        vaciar_tabla_factura_compra();
        tf_oc.setEnabled(false);
        // txt_num1.setEnabled(false);
        //  txt_num2.setEnabled(false);
        txt_num3.setEnabled(false);
        tf_proveedor.setEnabled(false);
        jf_fechaI.setVisible(false);
        jf_fechaF.setVisible(false);
        txt_num1.setVisible(false);
        txt_num2.setVisible(false);
        tf_fechaFact.setVisible(true);
        tf_fechaVto.setVisible(true);
        btn_eliminar.setEnabled(true);

        fila=tabla.getSelectedRow();
        codigo=(Integer) tabla.getValueAt(fila, 1);
        codInf= (Integer) tabla.getValueAt(fila, 0);
        nroFac=(Integer) tabla.getValueAt(fila, 4);
        fecha=(String) tabla.getValueAt(fila, 2);
        fechavto=(String) tabla.getValueAt(fila, 3);
        tf_oc.setText(Integer.toString(codigo));

        txt_num3.setText(Integer.toString(nroFac));
        tf_fechaFact.setText(fecha);
        tf_fechaVto.setText(fechavto);

        OrdenCompra tc=(OrdenCompra) obtenerDetalle(codigo) ;
        Proveedor p= obtenerProveedor1(tc.getCodProveedor().getCodigoProveedor());
        tf_proveedor.setText(p.getRazonSocial());
        registarFacturaDetalle1();
        
    }//GEN-LAST:event_tablaMouseClicked

    private void tf_ocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_ocFocusLost
        // TODO add your handling code here:
                id=Integer.parseInt(tf_oc.getText());
        ordenCompraQuery=entityManager.createNamedQuery( "OrdenCompra.findByCodOrden");
        ordenCompraQuery.setParameter("codOrden", id);
                List<OrdenCompra> oc=ordenCompraQuery.getResultList();
                if (oc.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Código de orden de compra inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_oc.requestFocus();
                    tf_oc.setText(null);
                    vaciar();
                    return;
                }
                else{  
                 
                      detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from orden_compra oc "
                      +"join detalle_orden_compra dc "+
                      "on oc.cod_orden=dc.cod_orden "+
                      "where oc.cod_orden="+id, DetalleOrdenCompra.class);
                      
                     value=0;
                      List<DetalleOrdenCompra> dc=detalleOrdenCompraQuery.getResultList();
                      if (!dc.isEmpty()){
                          for (int con=0;con<dc.size();con++){
                              if (dc.get(con).getCantidadPedida()==dc.get(con).getCantidadRecibida()){
                                  value++;
                              }
                          }
                          if (value==dc.size()){
                          JOptionPane.showMessageDialog(null,"Ya se registro la recepcion total de los articulos", "Error",JOptionPane.ERROR_MESSAGE);
                                  
                           tf_oc.setText(null);
                                    vaciar();
                                    tf_oc.requestFocus();
                                    return;
                          }
                  }
                
               
                    
                
          /*query = entityManager.createNamedQuery("Informerecepcion.findByCodOC");
                query.setParameter("codOC", Integer.parseInt(tf_oc.getText()));
                List<Informerecepcion> inf= query.getResultList();
                if (inf.size()!=0){
                    JOptionPane.showMessageDialog(null,"Ya se registro el informe ", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_oc.setText(null);
                    vaciar();
                    return;
                }*/

                }
        
    }//GEN-LAST:event_tf_ocFocusLost

    private void tf_ocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_ocFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_tf_ocFocusGained

    private void txt_num3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_num3FocusLost
        // TODO add your handling code here:
         numero = (txt_num1.getText()+txt_num2.getText()+txt_num3.getText()).toLowerCase();
         query = entityManager.createNamedQuery("Informerecepcion.findByNroFactura");
                query.setParameter("nroFactura", Integer.parseInt(numero));
                List<Informerecepcion> inf1= query.getResultList();
                if (inf1.size()!=0){
                    JOptionPane.showMessageDialog(null,"Ya se registro el numero de factura ", "Error",JOptionPane.ERROR_MESSAGE);
                    txt_num1.setText(null);
                    txt_num2.setText(null);
                    txt_num3.setText(null);
                   // vaciar();
                    txt_num1.requestFocus();
                    return;
                }
 
    }//GEN-LAST:event_txt_num3FocusLost

    private void btn_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_detalleActionPerformed
        btn_eliminar.setVisible(false);
         Date fechaFactura=new Date();
          DateFormat formato1=new SimpleDateFormat("dd/MM/yyyy");
        //System.out.print(fechaFactura+ "sistema,,, tf"+jf_fechaI.getDate());
        if(  (fechaFactura).before(jf_fechaI.getDate()))
        {
            JOptionPane.showMessageDialog(null,"La fecha de la factura no puede ser posterior a la fecha del dia , vuelva a introducir", "Error",JOptionPane.ERROR_MESSAGE);
         //  jf_fechaF.setDate(null);
           jf_fechaI.setDate(null);
           // vaciar();
            jf_fechaI.requestFocus();
            return;
        }
        // System.out.print(fechaFactura);
        if(  jf_fechaF.getDate().before(fechaFactura))
        {
            JOptionPane.showMessageDialog(null,"La fecha de vencimiento de la factura ya paso,vuelva a introducir", "Error",JOptionPane.ERROR_MESSAGE);
           jf_fechaF.setDate(null);
          // jf_fechaI.setDate(null);
           // vaciar();
            jf_fechaF.requestFocus();
            return;
        }
         if(   jf_fechaF.getDate().before(jf_fechaI.getDate()))
        {
            JOptionPane.showMessageDialog(null,"La fecha de vencimiento no puede ser menor a la de la factura, No se puede registrar", "Error",JOptionPane.ERROR_MESSAGE);
           // vaciar();
             jf_fechaF.setDate(null);
           jf_fechaI.setDate(null);
            jf_fechaI.requestFocus();
            return;
        }
         else{
             registarFacturaDetalle();
         }
        
       
         btn_detalle.setEnabled(false);
    }//GEN-LAST:event_btn_detalleActionPerformed

    private void tablaCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCompraMouseClicked
        // TODO add your handling code here:
      
          valorFila=tablaCompra.getSelectedRow();
       //   System.out.print(valorFila);
        //  System.out.print(tablaCompra.getRowCount());
        articulo=(String)tablaCompra.getValueAt(valorFila,0);
        int dif=( (Integer.parseInt(tablaCompra.getValueAt(valorFila,2).toString())) - (Integer.parseInt(tablaCompra.getValueAt(valorFila,3).toString())));
        cantArticulo= String.valueOf(dif);
        tf_articulo.setText(articulo);
        tf_cantidad.setText(cantArticulo);
        btn_modificar.setEnabled(true);
        if (tablaCompra.getRowCount()<=1){
            btn_quitar.setEnabled(false);
            
        }
        else{
            btn_quitar.setEnabled(true);
        }
        
        
        
        
    }//GEN-LAST:event_tablaCompraMouseClicked

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // TODO add your handling code here:
        btn_aceptarModif.setEnabled(true);
        tf_cantidad.setEnabled(true);
        btn_quitar.setEnabled(false);
         String articuloModificar;
        //int cantidadRecibida;
         DefaultTableModel modelo = (DefaultTableModel)tablaCompra.getModel(); 
         articuloModificar= (String) modelo.getValueAt(valorFila, 0);
       // actualizarDetalleOrdenCompra(articuloQuitar);
         System.out.print(articuloModificar);
        
      //  actualizarCantidadPendiente(articuloModificar);
    //    totaliva = (Integer.parseInt(txtIva.getText())-((precio*Integer.parseInt(tf_cantidad.getText()))/11));
   //     totalCompra = (Integer.parseInt(txt_total.getText()) -(precio*Integer.parseInt(tf_cantidad.getText())) );
  //      txtIva.setText(String.valueOf(totaliva));
   //     txt_total.setText(String.valueOf(totalCompra));
        
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_aceptarModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarModifActionPerformed
        // TODO add your handling code here:
        btn_quitar.setEnabled(false);
               btn_aceptar.setEnabled(true);

        Articulo at= obtenerArticulo(tf_articulo.getText());
       DefaultTableModel modelo = (DefaultTableModel)tablaCompra.getModel();
       if ((Integer.parseInt(modelo.getValueAt(valorFila, 2).toString()))<(Integer.parseInt(modelo.getValueAt(valorFila, 3).toString()))+((Integer.parseInt(tf_cantidad.getText())))){
           JOptionPane.showMessageDialog(null,"La cantidad sobrepasa a la establecida en la orden de compra ", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_cantidad.setText(null);
                    return;
       }
       String cantPed= (String) modelo.getValueAt(valorFila, 2);
modelo.removeRow(valorFila); 

        inicializar_factura_compra(tf_articulo.getText(),at.getCosto(),Integer.valueOf(cantPed),Integer.valueOf(tf_cantidad.getText()), at.getCodigoArticulo());
        //btn_aceptarModif.setEnabled(false);
        //String art, int precio, int cant
        calcular();
        btn_aceptarModif.setEnabled(true);
    }//GEN-LAST:event_btn_aceptarModifActionPerformed

    private void btn_quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitarActionPerformed
        // TODO add your handling code here:
        String articuloQuitar;
        //int cantidadRecibida;
         DefaultTableModel modelo = (DefaultTableModel)tablaCompra.getModel(); 
         articuloQuitar= (String) modelo.getValueAt(valorFila, 0);
        actualizarDetalleOrdenCompra(articuloQuitar);
         System.out.print(articuloQuitar);
modelo.removeRow(valorFila); 
/*String arti= (String) modelo.getValueAt(valorFila, 0);
 Articulo artic= obtenerArticulo(arti);
                            detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "
                                                      +" where cod_orden= "+Integer.valueOf(tf_oc.getText())+
                                                    " and cod_articulo= "+artic.getCodigoArticulo(), DetalleOrdenCompra.class);
      List<DetalleOrdenCompra> cps=detalleOrdenCompraQuery.getResultList();
      if (!cps.isEmpty()){
          for (int j=0;j<cps.size();j++){
              
          entityManager.getTransaction().begin();
                            DetalleOrdenCompra doc = new DetalleOrdenCompra();
              doc.setCantidadPedida(cps.get(j).getCantidadPedida());
              doc.setCodArticulo(cps.get(j).getCodArticulo());
              doc.setCodDetalle(cps.get(j).getCodDetalle());
              
              
              doc.setCodOrden(0);
              doc.setCodProveedor(cps.get(j).getCodProveedor());
              doc.setEstado("pendiente");
                        entityManager.merge(doc);
                     entityManager.flush();}*/
  //entityManager.getTransaction().commit();
       //         entityManager.close();
         calcular();
    }//GEN-LAST:event_btn_quitarActionPerformed
    
   
   // }
    private void tf_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadKeyTyped
        // TODO add your handling code here:
        int limite=4;
        if(tf_oc.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_cantidadKeyTyped

    private void jf_fechaIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jf_fechaIFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jf_fechaIFocusLost

    private void jf_fechaFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jf_fechaFFocusLost
        // TODO add your handling code here:
        
        

       
    }//GEN-LAST:event_jf_fechaFFocusLost

private OrdenCompra obtenerDetalle(int cod){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("OrdenCompra.findByCodOrden");
        query.setParameter("codOrden", cod);
        List<OrdenCompra> pro = query.getResultList();
        OrdenCompra prodServ = null;
        try{
            prodServ = pro.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return prodServ;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InformeRecepcionRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InformeRecepcionRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InformeRecepcionRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InformeRecepcionRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoRecepcion().setVisible(true);
            }
        });*/
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new InformeRecepcionRegistrar();
                frame.setVisible(true);
                frame.setTitle("Informe recepcion");
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<bean.Articulo> articuloList;
    private javax.persistence.Query articuloQuery;
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_aceptarModif;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelar3;
    private javax.swing.JButton btn_detalle;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar;
    private java.util.List<bean.DetalleFacturacompra> detalleFacturacompraList;
    private javax.persistence.Query detalleFacturacompraQuery;
    private java.util.List<bean.DetalleOrdenCompra> detalleOrdenCompraList;
    private javax.persistence.Query detalleOrdenCompraQuery;
    private javax.persistence.EntityManager entityManager;
    private java.util.List<bean.FacturaPago> facturaPagoList;
    private javax.persistence.Query facturaPagoQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static com.toedter.calendar.JDateChooser jf_fechaF;
    private static com.toedter.calendar.JDateChooser jf_fechaI;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_oc;
    private javax.swing.JLabel lbl_oc1;
    private javax.swing.JLabel lbl_oc2;
    private javax.swing.JLabel lbl_oc3;
    private javax.swing.JLabel lbl_oc4;
    private javax.swing.JLabel lbl_registrarC;
    private javax.swing.JLabel lbl_valor;
    private java.util.List<bean.Informerecepcion> list;
    private javax.swing.JComboBox list_filtros;
    private java.util.List<bean.OrdenCompra> ordenCompraList;
    private javax.persistence.Query ordenCompraQuery;
    private javax.persistence.Query query;
    private javax.swing.JTable tabla;
    private static javax.swing.JTable tablaCompra;
    private javax.swing.JTextField tf_articulo;
    private javax.swing.JTextField tf_cantidad;
    private javax.swing.JTextField tf_fechaFact;
    private javax.swing.JTextField tf_fechaVto;
    public static javax.swing.JTextField tf_oc;
    private static javax.swing.JTextField tf_proveedor;
    private javax.swing.JTextField tf_valor;
    private static javax.swing.JTextField txtIva;
    private static javax.swing.JTextField txt_num1;
    private static javax.swing.JTextField txt_num2;
    private static javax.swing.JTextField txt_num3;
    private static javax.swing.JTextField txt_total;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
private Proveedor obtenerProveedor(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByRazonSocial");
        query.setParameter("razonSocial", tf_proveedor.getText());
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }

private Proveedor obtenerProveedor1(int cod){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Proveedor.findByCodigoProveedor");
        query.setParameter("codigoProveedor", cod);
        List<Proveedor> p = query.getResultList();
        Proveedor nom = null;
        try{
            nom = p.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
 
private Articulo obtenerArticulo(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Articulo.findByNombre");
        query.setParameter("nombre", nombre);
        List<Articulo> a = query.getResultList();
        Articulo nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
private DetalleOrdenCompra obtenerArticulos(int oc){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("DetalleOrdenCompra.findByCodDetalle");
        query.setParameter("codDetalle",oc);
        List<DetalleOrdenCompra> a = query.getResultList();
        DetalleOrdenCompra nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }

    private void registarFacturaDetalle() {
   detalleOrdenCompraQuery=entityManager.createNamedQuery( "DetalleOrdenCompra.findByCodOrden");
                detalleOrdenCompraQuery.setParameter("codOrden", Integer.valueOf(tf_oc.getText()));
                List<DetalleOrdenCompra> oc=detalleOrdenCompraQuery.getResultList();
                if (oc.isEmpty()){
                    JOptionPane.showMessageDialog(null,"no se encuentran detalles", "Error",JOptionPane.ERROR_MESSAGE);
                   // tf_valor.setText(null);
                    return;
                }
                else{
        for(i=0;i<oc.size();i++){
            valor= oc.get(i).getCodDetalle();
            DetalleOrdenCompra tc3 = obtenerArticulos(valor);
            codigo= tc3.getCodArticulo().getCodigoArticulo();
              cantidadRecibida = tc3.getCantidadRecibida();
            cantidadPedida= tc3.getCantidadPedida();

           // cantidad = tc3.getCantidadPedida();
            nombreArticulo = tc3.getCodArticulo().getNombre();
            precio = tc3.getCodArticulo().getCosto();
            tf_proveedor.setText(oc.get(i).getCodOrden().getCodProveedor().getRazonSocial());
            totalCompra = precio*cantidadRecibida;
            inicializar_factura_compra(nombreArticulo, precio, cantidadPedida,cantidadRecibida, codigo);
                }
                }
    }

   
public  static void inicializar_factura_compra(String art, int precio, int cantPedida, int cantRecibida, int codArt){
        
        DefaultTableModel dtmCompra = (DefaultTableModel) tablaCompra.getModel();
       /* String[] fila = new String[5];
        fila[0] = String.valueOf(codArt);
        fila[1]= art;
        fila[2] = String.valueOf(precio);
        fila[3] = String.valueOf(cant);
        fila[4] = String.valueOf(precio*cant);*/
        
         String[] fila = new String[5];
        fila[0] = art;
      //  fila[1]= art;
        fila[1] = String.valueOf(precio);
        fila[2] = String.valueOf(cantPedida);
        fila[3] = String.valueOf(cantRecibida);
        fila[4] = String.valueOf(precio*cantRecibida);
        
        dtmCompra.addRow(fila);
        tablaCompra.setModel(dtmCompra);
        
        totaliva = (Integer.parseInt(txtIva.getText())+((precio*cantRecibida)/11));
        totalCompra = (Integer.parseInt(txt_total.getText()) +(precio*cantRecibida) );
        txt_total.setText("" + totalCompra);
      txtIva.setText("" + totaliva);
}
public static void vaciar_tabla_factura_compra() {
       tablaCompra.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{
                     "Descripcion", "Precio", "Cantidad Pedida","Cantidad Recibida","Total" 
                }) {

            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        txt_total.setText("0");
        tablaCompra.getTableHeader().setReorderingAllowed(false);
       
    }
public static void vaciar() {
        vaciar_tabla_factura_compra();
        txt_total.setText("0");
        tablaCompra.getTableHeader().setReorderingAllowed(false);
        txtIva.setText("0");
       tf_oc.setText("");
       txt_num1.setText("");
       txt_num2.setText("");
       txt_num3.setText("");
       tf_proveedor.setText("");
       jf_fechaF.setDate(null);
       jf_fechaI.setDate(null);
    }


    public static AuditoriaSistema registrarAuditoria(String accion,String tab, String datos){
         AuditoriaSistema as=new AuditoriaSistema();
                    as.setAccion(accion);
                    as.setTabla(tab);
                    as.setAntes(datos);
                    as.setDespues("No hay cambios");
                     //trabajamos con la fecha
                    Date fechaAuditoria=new Date();
                    DateFormat formato1=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                    as.setFechaHora((formato1.format(fechaAuditoria)));
                    as.setUsuario(LoginView.nombreUsuario);
                    return as;
    }
    private void imprimir(int numero) {
     
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "1234");
            HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
           // Map parametros=new HashMap();
            par.put("NumeroFactura",numero );
            JasperPrint jp = JasperFillManager.fillReport("C:/proyecto/src/reportes/FacturaCompra_1_1.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
            JasperViewer jv = new JasperViewer(jp,false);
            jv.setVisible(true);
            jv.setTitle("Informe Recepcion");
         //    Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
           //  jv.setIconImage(icon);
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
         }

    private void calcular() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//totalCompra=0;
    //  int  totalI=0;
  int totalM=0;
        txtIva.setText("0");
   txt_total.setText("0");
   DefaultTableModel modelo = (DefaultTableModel)tablaCompra.getModel();
        for (i=0;i<modelo.getRowCount();i++){
           v= (String) modelo.getValueAt(i, 4);
          //  System.out.print("  es:"+tablaCompra.getValueAt(i, 3));
      totalM= Integer.parseInt(v)+totalM;
           //codInf= (Integer) tabla.getValueAt(fila, 0);
    }
  txt_total.setText(String.valueOf(totalM));
   txtIva.setText(String.valueOf(totalM/11));
    }

    private void sumarStock(int cod, int cant) {
        articuloQuery= entityManager.createNamedQuery("Articulo.findByCodigoArticulo", Articulo.class);
        articuloQuery.setParameter("codigoArticulo", cod);
     List<Articulo> ar=articuloQuery.getResultList();
      if (!ar.isEmpty()){
          for (int j=0;j<ar.size();j++){
              Articulo art= new Articulo();
              art.setCantidadMaxima(ar.get(j).getCantidadMaxima());
              art.setCantidadMinima(ar.get(j).getCantidadMinima());
              art.setCantidadStock(ar.get(j).getCantidadStock()+cant);
              art.setCodCategoria(ar.get(j).getCodCategoria());
              art.setCodigoArticulo(ar.get(j).getCodigoArticulo());
              art.setCodigoProveedor(ar.get(j).getCodigoProveedor());
              art.setCosto(ar.get(j).getCosto());
              art.setNombre(ar.get(j).getNombre());
                 entityManager.merge(art);
                     entityManager.flush();

    }}

      }
    
    private void restarStock(int cod, int cant) {
    articuloQuery= entityManager.createNamedQuery("Articulo.findByCodigoArticulo", Articulo.class);
        articuloQuery.setParameter("codigoArticulo", cod);
     List<Articulo> ar=articuloQuery.getResultList();
      if (!ar.isEmpty()){
          for (int j=0;j<ar.size();j++){
              Articulo art= new Articulo();
              art.setCantidadMaxima(ar.get(j).getCantidadMaxima());
              art.setCantidadMinima(ar.get(j).getCantidadMinima());
              art.setCantidadStock(ar.get(j).getCantidadStock()-cant);
              art.setCodCategoria(ar.get(j).getCodCategoria());
              art.setCodigoArticulo(ar.get(j).getCodigoArticulo());
              art.setCodigoProveedor(ar.get(j).getCodigoProveedor());
              art.setCosto(ar.get(j).getCosto());
              art.setNombre(ar.get(j).getNombre());
                 entityManager.merge(art);
                     entityManager.flush();

    }}

      }

    private void obtenerDetalleCompra(int factura) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         detalleFacturacompraQuery=entityManager.createNamedQuery( "DetalleFacturacompra.findByNumFactura");
                detalleFacturacompraQuery.setParameter("numFactura",factura);
                List<DetalleFacturacompra> oc=detalleFacturacompraQuery.getResultList();
                if (oc.isEmpty()){
                    JOptionPane.showMessageDialog(null,"no se encuentran detalles", "Error",JOptionPane.ERROR_MESSAGE);
                   // tf_valor.setText(null);
                    return;
                }
                else{
        for(int j=0;j<oc.size();j++){
            restarStock(oc.get(j).getCodArticulo(),oc.get(j).getCantidad());
            System.out.print(oc.get(j).getCodArticulo());
    }
}}

    private void actualizarDetalleOrdenCompra(String arti) {
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Articulo a= obtenerArticulo(arti);
        detalleOrdenCompraQuery =entityManager.createNativeQuery("select * from detalle_orden_compra"
                +" where cod_articulo="+a.getCodigoArticulo()
                +" and cod_orden="+Integer.parseInt(tf_oc.getText()) , DetalleOrdenCompra.class);
     List<DetalleOrdenCompra> oc=detalleOrdenCompraQuery.getResultList();
                if (oc.isEmpty()){
                    JOptionPane.showMessageDialog(null,"no se encuentran detalles", "Error",JOptionPane.ERROR_MESSAGE);
                   // tf_valor.setText(null);
                    return;
                }
                else{   
                    for (int j=0;j<oc.size();j++){
                        DetalleOrdenCompra de= new DetalleOrdenCompra();
                        de.setCantidadPedida(oc.get(j).getCantidadPedida());
                        de.setCodArticulo(a);
                        de.setCodDetalle(oc.get(j).getCodDetalle());
                        OrdenCompra oc1 = obtenerOrdenCompra(Integer.valueOf(tf_oc.getText()));
                        de.setCodOrden(oc1);
                       // de.setCodOrden(Integer.parseInt(tf_oc.getText()));
                       // de.setCodProveedor(oc.get(j).getCodProveedor());
                         de.setEstado("solicitado");
                         de.setCantidadRecibida(0);
                        entityManager.merge(de);
                     entityManager.flush();
                        
                    }
                  //  DetalleOrdenCompra de= new DetalleOrdenCompra();
                    //de.setCantidadPedida(oc.get(i));
   }
}

 
        private void registarFacturaDetalle1() {
   detalleOrdenCompraQuery=entityManager.createNamedQuery( "DetalleOrdenCompra.findByCodOrden");
                detalleOrdenCompraQuery.setParameter("codOrden", Integer.valueOf(tf_oc.getText()));
                List<DetalleOrdenCompra> oc=detalleOrdenCompraQuery.getResultList();
                if (oc.isEmpty()){
                    JOptionPane.showMessageDialog(null,"no se encuentran detalles", "Error",JOptionPane.ERROR_MESSAGE);
                   // tf_valor.setText(null);
                    return;
                }
                else{
        for(i=0;i<oc.size();i++){
            valor= oc.get(i).getCodDetalle();
            DetalleOrdenCompra tc3 = obtenerArticulos(valor);
            DetalleFacturacompra fa3= obtenerDetalleFactura(Integer.parseInt(txt_num3.getText()));
            codigo= tc3.getCodArticulo().getCodigoArticulo();
            cantidadRecibida =fa3.getCantidad();// tc3.getCantidadRecibida();
            cantidadPedida= tc3.getCantidadPedida();
            nombreArticulo = tc3.getCodArticulo().getNombre();
            precio = tc3.getCodArticulo().getCosto();
            tf_proveedor.setText(oc.get(i).getCodOrden().getCodProveedor().getRazonSocial());
            totalCompra = precio*cantidadRecibida;
            inicializar_factura_compra(nombreArticulo, precio, cantidadPedida,cantidadRecibida, codigo);
                }
                }
    }
        private DetalleFacturacompra obtenerDetalleFactura(int fac){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("DetalleFacturacompra.findByNumFactura");
        query.setParameter("numFactura",fac);
        List<DetalleFacturacompra> a = query.getResultList();
        DetalleFacturacompra nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
         private FacturaPago obtenerFactura(int f){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("FacturaPago.findByNumFactura");
        query.setParameter("numFactura",f);
        List<FacturaPago> a = query.getResultList();
        FacturaPago nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
private OrdenCompra obtenerOrdenCompra(int codigo){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("OrdenCompra.findByCodOrden");
        query.setParameter("codOrden", codigo);
        List<OrdenCompra> o = query.getResultList();
        OrdenCompra nom = null;
        try{
            nom = o.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
}
