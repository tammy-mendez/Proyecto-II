/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.Proveedor;
import bean.Articulo;
import bean.AuditoriaSistema;
import bean.CategoriaArticulo;
import bean.DetalleOrdenCompra;
import bean.Empleado;
import bean.MovimientoStock;
import bean.OrdenCompra;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.EventQueue;
import java.beans.Beans;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author tammy
 */
public class MovimientoArticuloModificarEliminar extends javax.swing.JFrame {
private char ch;
private int resp, fila,i;
private int id, cantidadActual, cantidadInicialExtraida;

int codigoMovimiento;
String nombreArticulo;
int cantidad;
String fecha;
    public MovimientoArticuloModificarEliminar() {
        initComponents();
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM MovimientoStock m");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        detalleOrdenCompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DetalleOrdenCompra d");
        detalleOrdenCompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : detalleOrdenCompraQuery.getResultList();
        empleadoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT e FROM Empleado e");
        empleadoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : empleadoQuery.getResultList();
        ordenCompraQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT o FROM OrdenCompra o");
        ordenCompraList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordenCompraQuery.getResultList();
        jPanel3 = new javax.swing.JPanel();
        lbl_registrarC = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbl_nombre = new javax.swing.JLabel();
        cantidadMinimaLabel = new javax.swing.JLabel();
        tf_articulo = new javax.swing.JTextField();
        tf_cantidad = new javax.swing.JTextField();
        cantidadMinimaLabel1 = new javax.swing.JLabel();
        tf_fecha = new javax.swing.JTextField();
        lbl_nombre1 = new javax.swing.JLabel();
        tf_codigo = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        btn_cancelar3 = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbl_valor = new javax.swing.JLabel();
        tf_valor = new javax.swing.JTextField();
        lbl_filtro = new javax.swing.JLabel();
        list_filtros = new javax.swing.JComboBox();
        btn_buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_registrarC.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_registrarC.setForeground(new java.awt.Color(255, 255, 255));
        lbl_registrarC.setText("Modificar/Eliminar Extraccion de Articulo:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(lbl_registrarC)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_registrarC)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_nombre.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_nombre.setText("Articulo:");

        cantidadMinimaLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        cantidadMinimaLabel.setText("Cantidad:");

        tf_articulo.setEnabled(false);

        tf_cantidad.setEnabled(false);
        tf_cantidad.addFocusListener(formListener);
        tf_cantidad.addKeyListener(formListener);

        cantidadMinimaLabel1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        cantidadMinimaLabel1.setText("Fecha:");

        tf_fecha.setEnabled(false);

        lbl_nombre1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_nombre1.setText("Codigo:");

        tf_codigo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_nombre)
                    .addComponent(cantidadMinimaLabel)
                    .addComponent(cantidadMinimaLabel1)
                    .addComponent(lbl_nombre1))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tf_articulo, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                        .addComponent(tf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_fecha))
                    .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nombre1)
                    .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_nombre, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadMinimaLabel)
                    .addComponent(tf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadMinimaLabel1)
                    .addComponent(tf_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_cancelar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar3.setText("Cancelar");
        btn_cancelar3.addActionListener(formListener);

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.setEnabled(false);
        btn_guardar.addActionListener(formListener);

        btn_modificar.setText("Modificar");
        btn_modificar.setEnabled(false);
        btn_modificar.addActionListener(formListener);

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/trash.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setEnabled(false);
        btn_eliminar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_modificar)
                .addGap(29, 29, 29)
                .addComponent(btn_guardar)
                .addGap(28, 28, 28)
                .addComponent(btn_eliminar)
                .addGap(33, 33, 33)
                .addComponent(btn_cancelar3)
                .addGap(34, 34, 34))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar3)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_modificar)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_valor.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        tf_valor.addKeyListener(formListener);

        lbl_filtro.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_filtro.setText("Buscar por:");

        list_filtros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Articulo" }));
        list_filtros.addMouseListener(formListener);

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(formListener);
        btn_buscar.addFocusListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbl_filtro)
                .addGap(18, 18, 18)
                .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_valor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_buscar)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_filtro)
                    .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_valor)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addContainerGap())
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoMovimiento}"));
        columnBinding.setColumnName("Codigo Movimiento");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoArticulo.nombre}"));
        columnBinding.setColumnName("Articulo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantidad}"));
        columnBinding.setColumnName("Cantidad");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaHora}"));
        columnBinding.setColumnName("Fecha Hora");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        jScrollPane1.setViewportView(masterTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        bindingGroup.bind();

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == btn_cancelar3) {
                MovimientoArticuloModificarEliminar.this.btn_cancelar3ActionPerformed(evt);
            }
            else if (evt.getSource() == btn_guardar) {
                MovimientoArticuloModificarEliminar.this.btn_guardarActionPerformed(evt);
            }
            else if (evt.getSource() == btn_modificar) {
                MovimientoArticuloModificarEliminar.this.btn_modificarActionPerformed(evt);
            }
            else if (evt.getSource() == btn_eliminar) {
                MovimientoArticuloModificarEliminar.this.btn_eliminarActionPerformed(evt);
            }
            else if (evt.getSource() == btn_buscar) {
                MovimientoArticuloModificarEliminar.this.btn_buscarActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == tf_cantidad) {
                MovimientoArticuloModificarEliminar.this.tf_cantidadFocusLost(evt);
            }
            else if (evt.getSource() == btn_buscar) {
                MovimientoArticuloModificarEliminar.this.btn_buscarFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == tf_cantidad) {
                MovimientoArticuloModificarEliminar.this.tf_cantidadKeyTyped(evt);
            }
            else if (evt.getSource() == tf_valor) {
                MovimientoArticuloModificarEliminar.this.tf_valorKeyTyped(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == list_filtros) {
                MovimientoArticuloModificarEliminar.this.list_filtrosMouseClicked(evt);
            }
            else if (evt.getSource() == masterTable) {
                MovimientoArticuloModificarEliminar.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btn_cancelar3ActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
      String antes;
        String despues;
        int codigo;

        if(tf_cantidad.getText().length()==0 || tf_fecha.getText().length()==0){
            JOptionPane.showMessageDialog(null,"No se permiten campos con valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
            tf_cantidad.requestFocus();
            }
        
        
            else {
                Articulo a=(Articulo) obtenerArticulo(tf_articulo.getText()) ;
                cantidadActual = a.getCantidadStock()+(Integer.parseInt(tf_cantidad.getText()));
                MovimientoStock ms= (MovimientoStock) obtenerStock(Integer.parseInt(tf_codigo.getText()));
                cantidadInicialExtraida=cantidad;

         
               resp=  JOptionPane.showConfirmDialog(null,"Desea modificar la extraccion de un articulo?", "Confirmar Creación",JOptionPane.YES_NO_OPTION );
               if (resp==JOptionPane.YES_OPTION){
                query=entityManager.createNamedQuery("MovimientoStock.findByCodigoMovimiento");
                 query.setParameter("codigoMovimiento", Integer.parseInt(tf_codigo.getText()));
                 List<MovimientoStock> m=query.getResultList();
                     //antes de los cambios
                 antes=m.get(0).toString();
                 MovimientoStock mv = new MovimientoStock();
                 mv.setCodigoMovimiento(Integer.parseInt(tf_codigo.getText()));
                 mv.setCodigoArticulo(a);
                 mv.setCantidad(Integer.parseInt(tf_cantidad.getText()));
                 mv.setFechaHora(tf_fecha.getText());
                  entityManager.getTransaction().begin();
                  entityManager.merge(mv);
                  entityManager.flush();
                  despues=mv.toString();
                  //registramos los datos de la auditoria
                   registrarAuditoria("Modificacion","Movimiento Articulo", antes, despues);
                   //actualizar stock articulo
                   antes= a.toString();
                    Articulo art= obtenerArticulo(tf_articulo.getText());
                    art.setCodigoArticulo(a.getCodigoArticulo());
                    art.setCantidadStock((a.getCantidadStock()+cantidadInicialExtraida)-Integer.parseInt(tf_cantidad.getText()));
                    art.setCantidadMaxima(a.getCantidadMaxima());
                    art.setCantidadMinima(a.getCantidadMinima());
                    art.setCodCategoria(a.getCodCategoria());
                    art.setPrecio(a.getPrecio());
                    art.setTipo(a.getTipo());
                    art.setCodigoProveedor(a.getCodigoProveedor());
                    art.setCosto(a.getCosto());
                    art.setNombre(a.getNombre());
                    //entityManager.getTransaction().begin();
                    despues=art.toString();
                    entityManager.merge(art);
                    entityManager.flush();
                    registrarAuditoria("Actualizacion Articulo","cantidad Stock",antes, despues);
                   
                     detalleOrdenCompraQuery=entityManager.createNativeQuery("select * from detalle_orden_compra "+
                    "where cod_articulo="+art.getCodigoArticulo(), DetalleOrdenCompra.class);
                List<DetalleOrdenCompra> doc=detalleOrdenCompraQuery.getResultList();
                //verifica que ya no exista orden de compra
                if(doc.isEmpty()){ 
                               //verificar y generar en caso necesario orden compra
                  if (art.getCantidadStock()<=art.getCantidadMinima()){
                 
                   //genera detalle de la orden de compra
                   DetalleOrdenCompra detalleOC= new DetalleOrdenCompra();
                   detalleOC.setCantidadPedida(art.getCantidadMaxima()-art.getCantidadStock());
                   detalleOC.setCodArticulo(art);
                   detalleOC.setCodProveedor(art.getCodigoProveedor());
                   detalleOC.setEstado("pendiente");
                   entityManager.persist(detalleOC);
                   entityManager.flush();
                   registrarAuditoria("Creacion","orden compra",detalleOC.toString(), "no hay cambios");
                    entityManager.getTransaction().commit();
        
                }
                    
                }
                JOptionPane.showMessageDialog(null,"Extraccion de Articulo Exitosa", "Confirmación",JOptionPane.INFORMATION_MESSAGE);        
                refrescar();    
                vaciar();
        }}
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void tf_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadKeyTyped
        // TODO add your handling code here:
        int limite=4;
        if(tf_cantidad.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_tf_cantidadKeyTyped

    private void tf_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_valorKeyTyped
        // TODO add your handling code here:
        if(list_filtros.getSelectedItem()=="Nombre" ){
            ch=evt.getKeyChar();
            if(Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
        }
        if(list_filtros.getSelectedItem()=="Empleado" ){
            ch=evt.getKeyChar();
            if(Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
            else{
                if(list_filtros.getSelectedItem()=="Código"){
                    ch=evt.getKeyChar();
                    if(!Character.isDigit(ch)){
                        getToolkit().beep();
                        evt.consume();
                    }

                }
            }}
    }//GEN-LAST:event_tf_valorKeyTyped

    private void list_filtrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_filtrosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_list_filtrosMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        if (tf_valor.getText().length()==0){
            JOptionPane.showMessageDialog(null,"Ingrese algún valor para efectuar la búsqueda", "Advertencia",JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            if(list_filtros.getSelectedItem()=="Código"){
                id=Integer.parseInt(tf_valor.getText());
                query=entityManager.createNamedQuery( "MovimientoStock.findByCodigoMovimiento");
                query.setParameter("codigoMovimiento", id);
                List<MovimientoStock> a=query.getResultList();
                if (a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Código inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(a);

            }
            

            if(list_filtros.getSelectedItem()=="Articulo"){
                //  id=Integer.parseInt(tf_valor.getText());
                query=entityManager.createNativeQuery( "SELECT * FROM movimiento_stock m "
                    + "INNER JOIN articulo a "
                    + "on m.codigoArticulo = a.codigoArticulo "
                    + "WHERE a.nombre LIKE "
                    +"'%"+tf_valor.getText()+"%'", MovimientoStock.class);
                List<MovimientoStock> ar = query.getResultList();
                if (ar.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Articulo inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ar);

            }
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_buscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_buscarFocusLost
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_btn_buscarFocusLost

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        // TODO add your handling code here:
       
    fila=masterTable.getSelectedRow();
    codigoMovimiento = (Integer) masterTable.getValueAt(fila, 0);
    nombreArticulo = (String)masterTable.getValueAt(fila, 1);
    cantidad = (Integer) masterTable.getValueAt(fila, 2);
    fecha = (String)masterTable.getValueAt(fila, 3);
    
    tf_codigo.setText(String.valueOf(codigoMovimiento));
    tf_articulo.setText(nombreArticulo);
    tf_cantidad.setText(String.valueOf(cantidad));
    tf_fecha.setText(fecha);
    
    btn_modificar.setEnabled(true);
    btn_eliminar.setEnabled(true);

    }//GEN-LAST:event_masterTableMouseClicked

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        btn_modificar.setEnabled(false);
        btn_guardar.setEnabled(true);
        tf_cantidad.setEnabled(true);
        
        btn_eliminar.setEnabled(false);

    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        String valor;
        int codigo;
        codigo=Integer.parseInt(tf_codigo.getText());
        
            resp=  JOptionPane.showConfirmDialog(null,"Esta seguro que desea eliminar?", "Confirmar Eliminación",JOptionPane.YES_NO_OPTION );
            if(resp==JOptionPane.YES_OPTION){
                entityManager.getTransaction().begin();
                MovimientoStock ms=entityManager.find(MovimientoStock.class,Integer.parseInt(tf_codigo.getText()) );
                valor=ms.toString();//guardamos el objeto antes de eliminar
                entityManager.remove(ms);
                registrarAuditoria("Eliminar", "Movimiento Stock", valor, "No existen cambios");
                //actualizar stock articulo
                    Articulo a=(Articulo) obtenerArticulo(tf_articulo.getText()) ;
                    String  antes=a.toString();
                    cantidadActual = a.getCantidadStock();
                    Articulo art= obtenerArticulo(tf_articulo.getText());
                    art.setCodigoArticulo(a.getCodigoArticulo());
                    art.setCantidadStock(cantidadActual+Integer.parseInt(tf_cantidad.getText()));
                    art.setCantidadMaxima(a.getCantidadMaxima());
                    art.setCantidadMinima(a.getCantidadMinima());
                    art.setCodCategoria(a.getCodCategoria());
                    art.setCodigoProveedor(a.getCodigoProveedor());
                    art.setCosto(a.getCosto());
                    art.setNombre(a.getNombre());
                    art.setPrecio(a.getPrecio());
                    art.setTipo(a.getTipo());
                    //entityManager.getTransaction().begin();
                    entityManager.merge(art);
                    entityManager.flush();
                    registrarAuditoria("Actualizacion Articulo","cantidad Stock",antes, art.toString());
                    entityManager.getTransaction().commit();
                   // entityManager.close();
                    JOptionPane.showMessageDialog(null, "Eliminación Exitosa");

                    refrescar();
                    vaciar();

                
            }
        
        
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void tf_cantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cantidadFocusLost
        // TODO add your handling code here:
           Articulo a=(Articulo) obtenerArticulo(tf_articulo.getText()) ;
            cantidadActual = a.getCantidadStock()+cantidad;
            MovimientoStock ms= (MovimientoStock) obtenerStock(Integer.parseInt(tf_codigo.getText()));
            cantidadInicialExtraida= ms.getCantidad();
               if (cantidadActual<=0 || cantidadActual<(Integer.parseInt(tf_cantidad.getText()))){
                            resp = JOptionPane.showConfirmDialog(null,"No se cuenta en stock actual con la cantidad solicitada, Desea extraer la cantidad con la que se cuenta actualmente en stock?", "Confirmar Modificación",JOptionPane.YES_NO_OPTION );
                                if (resp==JOptionPane.YES_OPTION){
                                       tf_cantidad.setText(String.valueOf(cantidadActual));
                                       tf_cantidad.setEnabled(false);
                                       tf_fecha.setEnabled(true);
                                }
                                else if (resp!=JOptionPane.YES_OPTION) {
                                    tf_cantidad.setText(null);
                                    tf_cantidad.requestFocus();
                                } 
               else{
                            tf_fecha.setEnabled(true);
                    //btn_guardar3.setEnabled(true);
               } 
                                  }
    }//GEN-LAST:event_tf_cantidadFocusLost

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelar3;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JLabel cantidadMinimaLabel;
    private javax.swing.JLabel cantidadMinimaLabel1;
    private java.util.List<bean.DetalleOrdenCompra> detalleOrdenCompraList;
    private javax.persistence.Query detalleOrdenCompraQuery;
    private java.util.List<bean.Empleado> empleadoList;
    private javax.persistence.Query empleadoQuery;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_nombre1;
    private javax.swing.JLabel lbl_registrarC;
    private javax.swing.JLabel lbl_valor;
    private java.util.List<bean.MovimientoStock> list;
    private javax.swing.JComboBox list_filtros;
    private javax.swing.JTable masterTable;
    private java.util.List<bean.OrdenCompra> ordenCompraList;
    private javax.persistence.Query ordenCompraQuery;
    private javax.persistence.Query query;
    public static javax.swing.JTextField tf_articulo;
    public static javax.swing.JTextField tf_cantidad;
    public static javax.swing.JTextField tf_codigo;
    public static javax.swing.JTextField tf_fecha;
    private javax.swing.JTextField tf_valor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovimientoArticuloModificarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovimientoArticuloModificarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovimientoArticuloModificarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovimientoArticuloModificarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new MovimientoArticuloModificarEliminar();
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
                frame.setTitle("Registrar Extraccion de Articulo");
                
            }
        });
    }
 
      
   
     private Articulo obtenerArticulo(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Articulo.findByNombre");
        query.setParameter("nombre", tf_articulo.getText());
        List<Articulo> a = query.getResultList();
        Articulo nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
     
     private DetalleOrdenCompra obtenerDetalle(Articulo codigo){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("DetalleOrdenCompra.findByCodArticulo");
        query.setParameter("codArticulo", codigo);
        List<DetalleOrdenCompra> a = query.getResultList();
        DetalleOrdenCompra nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
       private MovimientoStock obtenerStock(int movimiento){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("MovimientoStock.findByCodigoMovimiento");
        query.setParameter("codigoMovimiento", movimiento);
        List<MovimientoStock> a = query.getResultList();
        MovimientoStock nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
     
    
     
      private Empleado obtenerEmpleado(String nombre){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Empleado.findByNombre");
        query.setParameter("nombre", tf_fecha.getText());
        List<Empleado> a = query.getResultList();
        Empleado nom = null;
        try{
            nom = a.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
        
        ema.close();
        return nom;
    }
      private void registrarAuditoria(String accion, String entidad,String antes, String despues){
            AuditoriaSistema as=new AuditoriaSistema();
            Date fecha=new Date();
            DateFormat formato=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            as.setAccion(accion);
            as.setTabla(entidad);
            as.setFechaHora(formato.format(fecha));
            as.setUsuario(LoginView.nombreUsuario);
            as.setAntes(antes);
            as.setDespues(despues);
            entityManager.persist(as);
            entityManager.flush();
    }
      public void refrescar(){
          query=entityManager.createNamedQuery( "MovimientoStock.findAll");
               // query.setParameter("codigoArticulo", id);
                List<MovimientoStock> a=query.getResultList();
               
                list.clear();
                list.addAll(a);
 }
      public void vaciar(){
                tf_cantidad.setText(null);
                tf_codigo.setText(null);
                tf_fecha.setText(null);
                tf_articulo.setText(null);
                tf_valor.setText(null);
                tf_fecha.setEnabled(false);
                tf_cantidad.setEnabled(false);
                btn_eliminar.setEnabled(false);
                btn_modificar.setEnabled(false);
                btn_guardar.setEnabled(false);


      }
}
