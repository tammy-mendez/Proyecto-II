/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.AuditoriaSistema;
import bean.Cliente;
import bean.Correo;
import bean.FacturaCobro;
import bean.Habitacion;
import bean.Presupuesto;
import bean.Reserva;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.ImageIcon;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Vladimir
 */
public class Presupuestar extends javax.swing.JFrame {
    private Connection connection;
    DecimalFormat formatea = new DecimalFormat("###,###,###,###,###.##");
    private int diferencia;
    public static int opcionReserva=0;
    private char ch;
    FacturaCobro f=new FacturaCobro();
    private Date auxIn = null;
    private Date auxOut = null;
    private int fila;
    private String datos[]=new String[3];
    Reserva reserva = new Reserva();
    DateFormat formato=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
    DateFormat form=new SimpleDateFormat("dd-MM-yyyy");
    java.util.Date fecha = new Date();
  
    /**
     * Creates new form CrearReserva
     */
    public Presupuestar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Cliente c");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanel2 = new javax.swing.JPanel();
        btn_registrar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        panel_CrearReserva = new javax.swing.JPanel();
        lbl_BuscarRol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbl_cantidadPersonas = new javax.swing.JLabel();
        tf_cantidadPersonas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jc_checkin = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jc_checkout = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_montoTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tf_precioCategoria = new javax.swing.JTextField();
        tf_numeroHabitacion = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        tf_categoriaHabitacion = new javax.swing.JTextField();
        tf_cedulaCliente = new javax.swing.JTextField();
        tf_cliente = new javax.swing.JTextField();
        lbl_anticipar = new javax.swing.JLabel();
        tf_anticipar = new javax.swing.JTextField();
        btn_registrarCliente = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbl_valor = new javax.swing.JLabel();
        tf_valor = new javax.swing.JTextField();
        lbl_filtro = new javax.swing.JLabel();
        list_filtros = new javax.swing.JComboBox();
        btn_buscar1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        btn_registrar.setText("Generar");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/arrow-up.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btn_nuevo)
                .addGap(28, 28, 28)
                .addComponent(btn_registrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btn_cancelar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_registrar)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_nuevo))
                .addGap(35, 35, 35))
        );

        panel_CrearReserva.setBackground(new java.awt.Color(0, 153, 255));
        panel_CrearReserva.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_BuscarRol.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_BuscarRol.setForeground(new java.awt.Color(255, 255, 255));
        lbl_BuscarRol.setText("Generar Presupuesto");

        javax.swing.GroupLayout panel_CrearReservaLayout = new javax.swing.GroupLayout(panel_CrearReserva);
        panel_CrearReserva.setLayout(panel_CrearReservaLayout);
        panel_CrearReservaLayout.setHorizontalGroup(
            panel_CrearReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_CrearReservaLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(lbl_BuscarRol)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_CrearReservaLayout.setVerticalGroup(
            panel_CrearReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_CrearReservaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_BuscarRol)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel2.setText(" Cliente:");

        lbl_cantidadPersonas.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_cantidadPersonas.setText("Cantidad  Personas:");

        tf_cantidadPersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_cantidadPersonasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_cantidadPersonasKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel1.setText("Check In:");

        jLabel5.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel5.setText("Check Out:");

        jc_checkout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jc_checkoutFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel6.setText("Categoría Habitación:");

        jLabel7.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jLabel7.setText("N° Habitación:");

        jLabel8.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel8.setText("Monto Total (Gs):");

        tf_montoTotal.setEditable(false);
        tf_montoTotal.setBackground(new java.awt.Color(0, 153, 255));
        tf_montoTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_montoTotal.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel11.setText("Precio de Categoría:");

        tf_precioCategoria.setEditable(false);
        tf_precioCategoria.setBackground(new java.awt.Color(0, 153, 255));
        tf_precioCategoria.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_precioCategoria.setForeground(new java.awt.Color(255, 255, 255));

        tf_numeroHabitacion.setEditable(false);
        tf_numeroHabitacion.setBackground(new java.awt.Color(0, 153, 255));
        tf_numeroHabitacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_numeroHabitacion.setForeground(new java.awt.Color(255, 255, 255));
        tf_numeroHabitacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_numeroHabitacionFocusLost(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar.setText("Buscar Habitación");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        tf_categoriaHabitacion.setEditable(false);
        tf_categoriaHabitacion.setBackground(new java.awt.Color(0, 153, 255));
        tf_categoriaHabitacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_categoriaHabitacion.setForeground(new java.awt.Color(255, 255, 255));

        tf_cedulaCliente.setEditable(false);
        tf_cedulaCliente.setBackground(new java.awt.Color(0, 153, 255));
        tf_cedulaCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_cedulaCliente.setForeground(new java.awt.Color(255, 255, 255));
        tf_cedulaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_cedulaClienteActionPerformed(evt);
            }
        });
        tf_cedulaCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_cedulaClienteFocusLost(evt);
            }
        });
        tf_cedulaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_cedulaClienteKeyPressed(evt);
            }
        });

        tf_cliente.setEditable(false);
        tf_cliente.setBackground(new java.awt.Color(0, 153, 255));
        tf_cliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_cliente.setForeground(new java.awt.Color(255, 255, 255));

        lbl_anticipar.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_anticipar.setText("Anticipar (Gs):");

        tf_anticipar.setBackground(new java.awt.Color(0, 153, 255));
        tf_anticipar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_anticipar.setForeground(new java.awt.Color(255, 255, 255));

        btn_registrarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icon-student.png"))); // NOI18N
        btn_registrarCliente.setText("Registrar Cliente");
        btn_registrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(lbl_cantidadPersonas))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_categoriaHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_precioCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_cantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(tf_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(lbl_anticipar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_numeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_anticipar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tf_cedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jc_checkin, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jc_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_registrarCliente))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_cedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_registrarCliente))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(jc_checkin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jc_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_buscar))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_categoriaHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(tf_precioCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tf_numeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cantidadPersonas)
                    .addComponent(tf_cantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tf_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_anticipar)
                    .addComponent(tf_anticipar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_valor.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        tf_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_valorActionPerformed(evt);
            }
        });
        tf_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_valorKeyTyped(evt);
            }
        });

        lbl_filtro.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_filtro.setText("Buscar por:");

        list_filtros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Cedula", "Nombre", "Apellido", " " }));

        btn_buscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar1.setText("Buscar");
        btn_buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar1ActionPerformed(evt);
            }
        });
        btn_buscar1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_buscar1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbl_filtro)
                .addGap(18, 18, 18)
                .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(lbl_valor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btn_buscar1)
                .addGap(36, 36, 36))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_filtro)
                    .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_valor)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar1))
                .addContainerGap())
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoCliente}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cedula}"));
        columnBinding.setColumnName("Cedula");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ruc}"));
        columnBinding.setColumnName("Ruc");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefono}"));
        columnBinding.setColumnName("Telefono");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panel_CrearReserva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(197, 197, 197))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_CrearReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        // TODO add your handling code here:
         String letras;
        //JOptionPane.showConfirmDialog(null, fecha);
        if(tf_cedulaCliente.getText().length()==0){
             JOptionPane.showMessageDialog(null,"Seleccione un cliente", "Error",JOptionPane.ERROR_MESSAGE);
        }
        if ((jc_checkin.getDate() != null) 
                && (jc_checkout.getDate() != null) 
                && !tf_montoTotal.getText().equals("")
                && !tf_cantidadPersonas.getText().equals("")
                && !tf_numeroHabitacion.getText().equals("")
                && !tf_numeroHabitacion.getText().equals(""))
                        {
            if (auxIn.equals(jc_checkin.getDate())
                    && auxOut.equals(jc_checkout.getDate())){
                if(jc_checkin.getDate().before(jc_checkout.getDate())){
                     SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                     String dIN = format.format(jc_checkin.getDate());
                     String dOUT = format.format(jc_checkout.getDate());
                     Date dateIn = null;
                     Date dateOut = null;
                     try {
                         dateIn = format.parse(dIN);
                         dateOut = format.parse(dOUT);
                     } catch (ParseException ex) {
                         System.out.println("Formateo de fechas fallido");
                     }

                     Habitacion habitacion = new Habitacion();
                     Cliente cliente = obtenerCliente();
                     int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea Generar el presupuesto?");
                     if (respuesta == JOptionPane.YES_OPTION){
                         //generamos el presupuesto
                         Presupuesto p=new Presupuesto();
                         p.setEstado("Pendiente");
                         p.setCodigoCliente(cliente);
                         p.setFechaEmision(form.format(fecha));
                         entityManager.getTransaction().begin();
                         entityManager.persist(p);
                         entityManager.flush();
                         registrarAuditoria("Presupuesto",p.toString());
                         //generamos la reserva
                         reserva.setCantPersonas(Integer.parseInt(tf_cantidadPersonas.getText()));
                         reserva.setCheckIn(dateIn);
                         reserva.setCheckOut(dateOut);
                         reserva.setCodigoCliente(cliente);
                         reserva.setMontoAbonado(0);
                         reserva.setNumPresupuesto(p);
                         reserva.setMontoTotal(desformatear(tf_montoTotal.getText()));
                         query = entityManager.createNamedQuery("Habitacion.findByNumero");
                         query.setParameter("numero", Integer.parseInt(tf_numeroHabitacion.getText()));
                         habitacion = (Habitacion)query.getSingleResult();
                         reserva.setNumHabitacion(habitacion);
                         entityManager.persist(reserva);
                         entityManager.flush();    
                         registrarAuditoria("Reserva",reserva.toString());
                         entityManager.getTransaction().commit();
                         JOptionPane.showMessageDialog(null, "Registro Exitoso");
                         resetear();
                           //volvemos a preguntar si aporto algo y se genera la factura
                         try
                        {
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "user");
                            HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
                            Map parametros=new HashMap();
                            par.put("Presupuesto",p.getNumPresupuesto());
                            JasperPrint jp = JasperFillManager.fillReport("C:/Proyecto-II/src/reportes/presupuestoHabit.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
                            JasperViewer jv = new JasperViewer(jp,false);
                            jv.setVisible(true);
                            jv.setTitle("Presupuesto de Habitacion y P/S");
                            Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                            jv.setIconImage(icon);
                            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }

                     }
                     else{
                         this.dispose();
                     }
                }else{
                          JOptionPane.showMessageDialog(null, "Datos Invalidos o Incompletos "
                        + "impiden el registro");             
                }
            }else {
                JOptionPane.showConfirmDialog(null, "Los datos a guardar son distintos "
                        + "a los utilizados para los calculos");
                        
            }
        }
        else{
        JOptionPane.showMessageDialog(null, "Datos Invalidos o Incompletos "
                   + "impiden el registro");  
     }
      if(reserva.getCodigoCliente().getEmail()!=null){
          enviarDatosEmail();
      }
    }//GEN-LAST:event_btn_registrarActionPerformed
     private void registrarAuditoria(String Entidad,String valor){
                    AuditoriaSistema as=new AuditoriaSistema();
                   as.setAccion("Inserción");
                   as.setTabla(Entidad);
                   as.setAntes(valor);
                   as.setDespues("No hay cambios");
                   as.setFechaHora((formato.format(fecha)));
                   as.setUsuario("nadie");
                   entityManager.persist(as);
                   entityManager.flush();
    }
    private void tf_cantidadPersonasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadPersonasKeyPressed
        // TODO add your handling code here:
        DecimalFormat deci= new DecimalFormat("0");
        String d;
        int anticipo;
        java.util.Date fecha = new Date();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(jc_checkin.getDate() != null
                && jc_checkout.getDate() != null
                && !tf_cantidadPersonas.getText().equals("")
                && !tf_precioCategoria.getText().equals("")){
                if (jc_checkin.getDate().before(jc_checkout.getDate())
                    // &&jc_checkin.getDate().after(fecha)
                    //&&jc_checkout.getDate().after(fecha)
                ){
                    final float MILLSECS_PER_DAY = 24 * 60 * 60 * 1000;
                    long cantidadPersonas = Integer.parseInt(tf_cantidadPersonas.getText());
                    long precioxnoche = desformatear(tf_precioCategoria.getText());
                    float cantidadDias = (jc_checkout.getDate().getTime() - jc_checkin.getDate().getTime())/MILLSECS_PER_DAY;
                    System.out.println("Cantidad de dias devuelto"+" "+cantidadDias);
                    d=deci.format(cantidadDias);
                    d=d.replaceAll(",",".");
                    cantidadDias=Float.parseFloat(d);
                    System.out.println("Cantidad de dias calculado"+" "+cantidadDias);
                    long precioTotal = (long) (cantidadPersonas * precioxnoche * cantidadDias);
                    tf_montoTotal.setText(formato(precioTotal));
                    anticipo=(int) (precioTotal*0.5);
                    tf_anticipar.setText(formateador(anticipo));
                }else{
                    JOptionPane.showMessageDialog(null, "Fecha de checkin posterior a checkout");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Datos sin especificar");
            }

        }
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
            tf_montoTotal.setText(null);
            tf_anticipar.setText(null);
        }

    }//GEN-LAST:event_tf_cantidadPersonasKeyPressed

    private void tf_cantidadPersonasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadPersonasKeyTyped
        // TODO add your handling code here:
         ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_cantidadPersonasKeyTyped

    private void jc_checkoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jc_checkoutFocusLost
        // TODO add your handling code here:
        //no acciona
        JOptionPane.showMessageDialog(null, "Algo paso");
        if (jc_checkin.getDate().after(jc_checkout.getDate()))
        JOptionPane.showMessageDialog(null, jc_checkin.getDate());
    }//GEN-LAST:event_jc_checkoutFocusLost

    private void tf_numeroHabitacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_numeroHabitacionFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_tf_numeroHabitacionFocusLost

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        //tf_numeroHabitacion.setText("");
        //tf_categoriaHabitacion.setText("");
        //tf_precioCategoria.setText("");
        tf_montoTotal.setText("");
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

        java.util.Date fecha = new Date();
        //JOptionPane.showMessageDialog(null, auxIn.equals(auxOut));
        try {
            fecha = obtenerFechaDia();
        } catch (ParseException ex) {
            System.out.println("Problemas con fechas");
        }
        if ((jc_checkin.getDate() != null)
            && (jc_checkout.getDate() != null)){
            if( (jc_checkin.getDate().before(jc_checkout.getDate()))
                && (fecha.before(jc_checkin.getDate()))
                && (fecha.before(jc_checkout.getDate()))
            ){
                String localIn = format.format(jc_checkin.getDate());
                String localOut = format.format(jc_checkout.getDate());
                if(!localIn.equals(localOut)){
                    auxIn = jc_checkin.getDate();
                    auxOut = jc_checkout.getDate();
                    VerEstadodeHabitaciones.llamadaCrearReserva = "";
                    VerEstadodeHabitaciones.llamadaEditarReserva = "";
                    VerEstadodeHabitaciones.llamadaGenerarPresupuesto = "Invocado";
                    verEstadosHabitaciones();
                }
                //creación de ventana
                else{
                    JOptionPane.showMessageDialog(null, "Fechas Iguales");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "Fechas Invalidas");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Fechas Invalidas");
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void tf_cedulaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_cedulaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cedulaClienteActionPerformed

    private void tf_cedulaClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cedulaClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cedulaClienteFocusLost

    private void tf_cedulaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cedulaClienteKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tf_cedulaClienteKeyPressed

    private void btn_registrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarClienteActionPerformed
        // TODO add your handling code here:
        opcionReserva=1;
        String args[]=new String[1];
        args[0]="Registrar Cliente";
        ClienteCreate.main(args);
    }//GEN-LAST:event_btn_registrarClienteActionPerformed

    private void tf_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_valorActionPerformed

    private void tf_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_valorKeyTyped
        // TODO add your handling code here:
        if(list_filtros.getSelectedItem()=="Nombre" || list_filtros.getSelectedItem()=="Apellido"){
            ch=evt.getKeyChar();
            if(Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
        }else{
            if(list_filtros.getSelectedItem()=="Código"){
                ch=evt.getKeyChar();
                if(!Character.isDigit(ch)){
                    getToolkit().beep();
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_tf_valorKeyTyped

    private void btn_buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar1ActionPerformed
        // TODO add your handling code here:
        int id;
        if (tf_valor.getText().length()==0){
            JOptionPane.showMessageDialog(null,"Ingrese algún valor para efectuar la búsqueda", "Advertencia",JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            if(list_filtros.getSelectedItem()=="Código"){
                id=Integer.parseInt(tf_valor.getText());
                query=entityManager.createNamedQuery( "Cliente.findByCodigoCliente");
                query.setParameter("codigoCliente", id);
                List<Cliente> c=query.getResultList();
                if (c.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Código inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(c);

            }
            if(list_filtros.getSelectedItem()=="Cedula"){
                query = entityManager.createNativeQuery( "SELECT * FROM cliente WHERE cedula LIKE "
                    +"'%"+tf_valor.getText()+"%'", Cliente.class);
                List<Cliente> c=query.getResultList();
                if (c.size()==0){
                    JOptionPane.showMessageDialog(null,"Cédula inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(c);

            }
            if(list_filtros.getSelectedItem()=="Nombre"){
                query = entityManager.createNativeQuery( "SELECT * FROM cliente WHERE nombre LIKE "
                    +"'%"+tf_valor.getText()+"%'", Cliente.class);
                List<Cliente> c=query.getResultList();
                if (c.size()==0){
                    JOptionPane.showMessageDialog(null,"Nombre de cliente inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(c);

            }
            if(list_filtros.getSelectedItem()=="Apellido"){
                query = entityManager.createNativeQuery( "SELECT * FROM cliente WHERE apellido LIKE "
                    +"'%"+tf_valor.getText()+"%'", Cliente.class);
                List<Cliente> c=query.getResultList();
                if (c.size()==0){
                    JOptionPane.showMessageDialog(null,"Apellido de cliente inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(c);

            }
        }
    }//GEN-LAST:event_btn_buscar1ActionPerformed

    private void btn_buscar1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_buscar1FocusLost
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_btn_buscar1FocusLost

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        // TODO add your handling code here:
         fila=masterTable.getSelectedRow();
        tf_cedulaCliente.setText((String)masterTable.getValueAt(fila, 1));
        tf_cliente.setText(masterTable.getValueAt(fila, 2)+" "+masterTable.getValueAt(fila, 3));
    }//GEN-LAST:event_masterTableMouseClicked

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        // TODO add your handling code here:
        resetear();
    }//GEN-LAST:event_btn_nuevoActionPerformed
       private void resetear(){
        jc_checkin.setDate(null);
        jc_checkout.setDate(null);
        tf_categoriaHabitacion.setText(null);
        tf_precioCategoria.setText(null);
        tf_numeroHabitacion.setText(null);
        tf_cantidadPersonas.setText(null);
        tf_montoTotal.setText(null);
        tf_anticipar.setText(null);
        tf_cedulaCliente.setText(null);
        tf_cliente.setText(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Presupuestar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Presupuestar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Presupuestar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Presupuestar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new Presupuestar();
                frame.pack();
                frame.setVisible(true);
                frame.setTitle("Generar Presupuesto");
                Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                frame.setIconImage(icon);
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }
        });
    }
    private void verEstadosHabitaciones(){
        
        JFrame ventana = new VerEstadodeHabitaciones();
        VerEstadodeHabitaciones.llamadaGenerarPresupuesto = "Invocado";
        ventana.setLocationRelativeTo(null);
        ventana.setTitle("Ver Estado de Habitaciones");
        Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
        ventana.setIconImage(icon);
        ventana.setVisible(true);   
    }
       private void enviarDatosEmail(){
        boolean resultado;
           datos[0]=reserva.getCodigoCliente().getEmail();
           datos[1]="Detalles de  Reserva ";
           datos[2]=" BIENVENIDO AL HOTEL SANTA MARÍA"+"\n "
           +"Sr/Sra: "+reserva.getCodigoCliente().getNombre()+" "+reserva.getCodigoCliente().getApellido()+"\n " 
           +"Su reserva es la n°: "+reserva.getCodigoReserva()+"\n " 
           +"Check In: "+" "+form.format(reserva.getCheckIn())+"\n"+"Check Out: "+" "+form.format(reserva.getCheckOut())+"\n "
           +"Habitación: "+" "+reserva.getNumHabitacion().getNumero()+"\n"+"Categoría: "+" "+reserva.getNumHabitacion().getCodigoCategoria().getNombre()+"\n"
           +"Monto Habitación: "+" "+formateador(reserva.getNumHabitacion().getCodigoCategoria().getCostoxnoche())+"\n"+"Monto Total: "+" "+formateador(reserva.getMontoTotal())+"\n"+"Monto Abonado: "+" "+formateador(reserva.getMontoAbonado())+"\n"
           +"Tiene un plazo de 8 hs para confirmar su presupuesto, de lo contrario la misma será cancelada "+"\n"
           +"Debe abonar el 30% del monto total de la reserva, de lo contrario perderá la misma";
            Correo c=new Correo();
            resultado=c.enviarCorreo(datos);
            System.out.println(resultado);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_buscar1;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JButton btn_registrarCliente;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static com.toedter.calendar.JDateChooser jc_checkin;
    public static com.toedter.calendar.JDateChooser jc_checkout;
    private javax.swing.JLabel lbl_BuscarRol;
    private javax.swing.JLabel lbl_anticipar;
    private javax.swing.JLabel lbl_cantidadPersonas;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_valor;
    public static java.util.List<bean.Cliente> list;
    private javax.swing.JComboBox list_filtros;
    private javax.swing.JTable masterTable;
    private javax.swing.JPanel panel_CrearReserva;
    private javax.persistence.Query query;
    private javax.swing.JTextField tf_anticipar;
    private javax.swing.JTextField tf_cantidadPersonas;
    public static javax.swing.JTextField tf_categoriaHabitacion;
    private javax.swing.JTextField tf_cedulaCliente;
    private javax.swing.JTextField tf_cliente;
    private javax.swing.JTextField tf_montoTotal;
    public static javax.swing.JTextField tf_numeroHabitacion;
    public static javax.swing.JTextField tf_precioCategoria;
    private javax.swing.JTextField tf_valor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private Date obtenerFechaDia() throws ParseException{
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date fecha = new Date();
            /*int anho = fecha.get(Calendar.YEAR);
            int mes = fecha.get(Calendar.MONTH + 1);
            int dia = fecha.get(Calendar.DAY_OF_MONTH);
            String fechaActual = Integer.toString(anho) +"-"+Integer.toString(mes)
                    +"-"+Integer.toString(dia);
            */        
            return format.parse(format.format(fecha));
    }
    private Cliente obtenerCliente() {
         query = entityManager.createNamedQuery("Cliente.findByCedula");
         query.setParameter("cedula", tf_cedulaCliente.getText());
         Cliente cliente = null;
         try{
            cliente = (Cliente)query.getSingleResult();
            System.out.println(cliente);
         }catch(javax.persistence.NoResultException e){
             System.out.println(cliente);
         }
         return cliente;
     }
     private String formateador(int num){
        String formateado;
        formateado=formatea.format(num);
        return formateado;
    }
      private String formato(long num){
        String formateado;
        formateado=formatea.format(num);
        return formateado;
    }
    private int desformatear(String num){
        int numero;
        num=num.replace(".", "");
        numero=Integer.parseInt(num);
        return numero;
    }
    
}
