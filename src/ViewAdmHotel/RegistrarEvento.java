/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ViewAdmHotel;

import bean.Asistencia;
import bean.AuditoriaSistema;
import bean.Empleado;
import bean.Eventos;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Image;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Jorge
 */
public class RegistrarEvento extends javax.swing.JFrame {
    private char ch;
    private int limite;
    private final  TextAutoCompleter textAutoCompleter;
    private int resp;
    private int fila;
    Date fecha=new Date();
    DateFormat formato=new SimpleDateFormat("yyyy-MM-dd");
    DateFormat form=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
    String fecha2;
    

    /**
     * Creates new form RegistrarEvento
     */
    public RegistrarEvento() {
        initComponents();
        this.textAutoCompleter = new TextAutoCompleter(tf_codEmpleado);
        //infijo
        this.textAutoCompleter.setMode(0);
        inicializarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        EntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        Query = java.beans.Beans.isDesignTime() ? null : EntityManager.createQuery("SELECT a FROM Asistencia a");
        List = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(Query.getResultList());
        panel_regActividad = new javax.swing.JPanel();
        lbl_registrarActividad = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        dc_fechaInicio = new com.toedter.calendar.JDateChooser();
        list_tipoEvento = new javax.swing.JComboBox();
        lbl_fechaFin = new javax.swing.JLabel();
        dc_fechaFin = new com.toedter.calendar.JDateChooser();
        lbl_descripcionE = new javax.swing.JLabel();
        lbl_fechaInicio = new javax.swing.JLabel();
        lbl_tipoEvento = new javax.swing.JLabel();
        tf_descripcionE = new javax.swing.JTextField();
        lbl_codEmpleado = new javax.swing.JLabel();
        tf_codEmpleado = new javax.swing.JTextField();
        tf_datosEmp = new javax.swing.JTextField();
        lbl_fechaAsist = new javax.swing.JLabel();
        tf_fechaAsist = new javax.swing.JTextField();
        lbl_horaEntrada = new javax.swing.JLabel();
        tf_horaEntrada = new javax.swing.JTextField();
        lbl_horaSalida = new javax.swing.JLabel();
        tf_horaSalida = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btn_cancelar = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tf_valor = new javax.swing.JTextField();
        lbl_valor = new javax.swing.JLabel();
        lbl_filtro = new javax.swing.JLabel();
        list_filtros = new javax.swing.JComboBox();
        btn_buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_regActividad.setBackground(new java.awt.Color(0, 153, 255));
        panel_regActividad.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_registrarActividad.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_registrarActividad.setForeground(new java.awt.Color(255, 255, 255));
        lbl_registrarActividad.setText("Registrar Evento");

        javax.swing.GroupLayout panel_regActividadLayout = new javax.swing.GroupLayout(panel_regActividad);
        panel_regActividad.setLayout(panel_regActividadLayout);
        panel_regActividadLayout.setHorizontalGroup(
            panel_regActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_regActividadLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(lbl_registrarActividad)
                .addContainerGap(212, Short.MAX_VALUE))
        );
        panel_regActividadLayout.setVerticalGroup(
            panel_regActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_regActividadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_registrarActividad)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dc_fechaInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dc_fechaInicioFocusLost(evt);
            }
        });

        list_tipoEvento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Suspensión", "Permiso Justificado", "Vacaciones", "Horas Extras" }));

        lbl_fechaFin.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_fechaFin.setText("Fecha Fin:");

        dc_fechaFin.setDoubleBuffered(false);
        dc_fechaFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dc_fechaFinFocusLost(evt);
            }
        });

        lbl_descripcionE.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_descripcionE.setText("Descripción:");

        lbl_fechaInicio.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_fechaInicio.setText("Fecha Incio:");

        lbl_tipoEvento.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_tipoEvento.setText("Tipo de Evento:");

        tf_descripcionE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_descripcionEActionPerformed(evt);
            }
        });
        tf_descripcionE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_descripcionEKeyTyped(evt);
            }
        });

        lbl_codEmpleado.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_codEmpleado.setText("Empleado:");

        tf_codEmpleado.setEditable(false);
        tf_codEmpleado.setBackground(new java.awt.Color(0, 153, 255));
        tf_codEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_codEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        tf_codEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_codEmpleadoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_codEmpleadoKeyTyped(evt);
            }
        });

        tf_datosEmp.setEditable(false);
        tf_datosEmp.setBackground(new java.awt.Color(0, 153, 255));
        tf_datosEmp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_datosEmp.setForeground(new java.awt.Color(255, 255, 255));

        lbl_fechaAsist.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_fechaAsist.setText("Fecha Asistencia:");

        tf_fechaAsist.setEditable(false);
        tf_fechaAsist.setBackground(new java.awt.Color(0, 153, 255));
        tf_fechaAsist.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_fechaAsist.setForeground(new java.awt.Color(255, 255, 255));

        lbl_horaEntrada.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_horaEntrada.setText("Hora Entrada:");

        tf_horaEntrada.setEditable(false);
        tf_horaEntrada.setBackground(new java.awt.Color(0, 153, 255));
        tf_horaEntrada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_horaEntrada.setForeground(new java.awt.Color(255, 255, 255));

        lbl_horaSalida.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        lbl_horaSalida.setText("Hora Salida:");

        tf_horaSalida.setEditable(false);
        tf_horaSalida.setBackground(new java.awt.Color(0, 153, 255));
        tf_horaSalida.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_horaSalida.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(lbl_fechaInicio)
                                        .addGap(18, 18, 18)
                                        .addComponent(dc_fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_tipoEvento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(list_tipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_descripcionE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_fechaFin)
                                        .addGap(18, 18, 18)
                                        .addComponent(dc_fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tf_descripcionE, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbl_fechaAsist)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_codEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(tf_datosEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_fechaAsist, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(lbl_horaEntrada)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tf_horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_horaSalida)
                                        .addGap(10, 10, 10)
                                        .addComponent(tf_horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 73, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_codEmpleado)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codEmpleado)
                    .addComponent(tf_codEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_datosEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_fechaAsist)
                    .addComponent(tf_fechaAsist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_horaEntrada)
                    .addComponent(tf_horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_horaSalida)
                    .addComponent(tf_horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tipoEvento)
                    .addComponent(list_tipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_descripcionE)
                    .addComponent(tf_descripcionE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dc_fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_fechaInicio))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_fechaFin)
                            .addGap(1, 1, 1)))
                    .addComponent(dc_fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btn_guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btn_cancelar)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancelar))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setForeground(new java.awt.Color(204, 204, 255));

        tf_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_valorKeyTyped(evt);
            }
        });

        lbl_valor.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        lbl_filtro.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_filtro.setText("Buscar por:");

        list_filtros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código Empleado", "Nombre", "Apellido", "Fecha", "Horas Trabajadas" }));
        list_filtros.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                list_filtrosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                list_filtrosFocusLost(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        btn_buscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_buscarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbl_filtro)
                .addGap(18, 18, 18)
                .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(lbl_valor)
                .addGap(18, 18, 18)
                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_buscar)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_filtro)
                    .addComponent(lbl_valor)
                    .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addContainerGap())
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, List, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoAsistencia}"));
        columnBinding.setColumnName(" Asistencia");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.codigoEmpleado}"));
        columnBinding.setColumnName("Empleado");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaAsistencia}"));
        columnBinding.setColumnName("Fecha Asistencia");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaSalida}"));
        columnBinding.setColumnName("Hora Salida");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaEntrada}"));
        columnBinding.setColumnName("Hora Entrada");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horasTrabajadas}"));
        columnBinding.setColumnName("Horas Trabajadas");
        columnBinding.setColumnClass(Float.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel_regActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_regActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // TODO add your handling code here:
        int id;
        if(tf_codEmpleado.getText().length()==0){
              JOptionPane.showMessageDialog(null,"Seleccione una asistencia", "Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        if(dc_fechaInicio.getDate()==null || dc_fechaFin.getDate()==null){
             JOptionPane.showMessageDialog(null,"No se admiten campos con valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        if(dc_fechaFin.getDate().before(dc_fechaInicio.getDate())){
             JOptionPane.showMessageDialog(null,"Fechas incorrectas", "Error",JOptionPane.ERROR_MESSAGE);
             return;
        }
        fecha2=formato.format(dc_fechaInicio.getDate());
        id=Integer.parseInt(tf_codEmpleado.getText());
        //verificamos si ya hay algun evento en esas fechas
        Query=EntityManager.createNativeQuery("SELECT * FROM eventos WHERE codigoEmpleado="
                        +id
                        + " AND ((fecha_inicio<= "
                        +"'"+formato.format(dc_fechaInicio.getDate())+"'"
                        +"AND fecha_fin>= "
                        +"'"+formato.format(dc_fechaInicio.getDate())+"' )"
                        +"OR (fecha_inicio<= "+"'"+formato.format(dc_fechaFin.getDate())+"' AND "
                        +"fecha_fin>= "+"'"+formato.format(dc_fechaFin.getDate())+"' ))", Eventos.class);
            List<Eventos> ev=Query.getResultList();
            if(!ev.isEmpty()){
                JOptionPane.showMessageDialog(null,"Evento:"+" "+ev.get(0).getTipoEvento()+" "+
                         " registrado en dichas fechas, No puede registrar otro evento!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
        //verificar si se ha marcado para confirmar la hora extra
        if(list_tipoEvento.getSelectedItem()=="Horas Extras"){
            Query=EntityManager.createNativeQuery("SELECT * FROM asistencia WHERE codigoEmpleado="
                        +id
                        + " AND fechaAsistencia= "
                        +"'"+fecha2+"'", Asistencia.class);
            List<Asistencia> a=Query.getResultList();
            if(a.isEmpty()){
                JOptionPane.showMessageDialog(null,"No hay asistencia marcada en la fecha, no puede"
                        + " ser computado como hora extra", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }        
         }
        System.out.println(dc_fechaFin.getDate());
        System.out.println(tf_fechaAsist.getText());
        System.out.println(fecha2);
        if( tf_fechaAsist.getText().equals(fecha2) && list_tipoEvento.getSelectedItem()!="Horas Extras"){
                JOptionPane.showMessageDialog(null,"Tipo de Evento incorrecto", "Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        resp=  JOptionPane.showConfirmDialog(null,"Desea Registrar un nuevo evento?", "Confirmar Registro",JOptionPane.YES_NO_OPTION );
        if (resp==JOptionPane.YES_OPTION){        
                Eventos e=new Eventos();
                Empleado em=obtenerEmpleado();
                e.setCodigoEmpleado(em);
                e.setDescripcion(tf_descripcionE.getText());
                 try {
                         e.setFechaInicio(formato.parse(formato.format(dc_fechaInicio.getDate())));
                         e.setFechaFin(formato.parse(formato.format(dc_fechaFin.getDate())));
                } catch (ParseException ex) {
                        Logger.getLogger(RegistrarEvento.class.getName()).log(Level.SEVERE, null, ex);
                }
                e.setTipoEvento((String) list_tipoEvento.getSelectedItem());
                e.setDuracion(calcularDias());
                EntityManager.getTransaction().begin();
                EntityManager.persist(e);
                EntityManager.flush();
                //auditoria de sistema
                 AuditoriaSistema as=new AuditoriaSistema();
                 as.setAccion("Inserción");
                 as.setTabla("Evento");
                 as.setFechaHora(form.format(fecha));
                 as.setAntes(e.toString());
                 as.setDespues("No hay cambios");
                 as.setUsuario("nadie");  
                 EntityManager.persist(as);
                 EntityManager.getTransaction().commit();
                 JOptionPane.showMessageDialog(null,"Registro Exitoso", "Confirmación",JOptionPane.INFORMATION_MESSAGE);
        }else{
                 this.dispose();
        } 
       
        resetear();
       
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void tf_descripcionEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_descripcionEKeyTyped
        // TODO add your handling code here:
        limite=150;
        if(tf_codEmpleado.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
    }//GEN-LAST:event_tf_descripcionEKeyTyped

    private void tf_descripcionEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_descripcionEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_descripcionEActionPerformed

    private void dc_fechaFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dc_fechaFinFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_dc_fechaFinFocusLost

    private void dc_fechaInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dc_fechaInicioFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_dc_fechaInicioFocusLost

    private void tf_codEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_codEmpleadoKeyTyped
        // TODO add your handling code here:
        limite=11;
        if(tf_codEmpleado.getText().length()==limite){
            getToolkit().beep();
            evt.consume(); //se le ignora

        }
        ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_codEmpleadoKeyTyped

    private void tf_codEmpleadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_codEmpleadoKeyPressed
        // TODO add your handling code here:
  
        

    }//GEN-LAST:event_tf_codEmpleadoKeyPressed

    private void tf_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_valorKeyTyped
        // TODO add your handling code here:
        char ch;
        if (list_filtros.getSelectedItem()=="Código Empleado" || list_filtros.getSelectedItem()=="Horas Trabajadas"){
            ch=evt.getKeyChar();
            if(!Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
        }else{
            if (list_filtros.getSelectedItem()=="Nombre" || list_filtros.getSelectedItem()=="Apellido"){
                ch=evt.getKeyChar();
                if(Character.isDigit(ch)){
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_tf_valorKeyTyped

    private void list_filtrosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_list_filtrosFocusLost
        // TODO add your handling code here:
        if(list_filtros.getSelectedItem()=="Fecha"){
            tf_valor.setText(formato.format(fecha));
        }
    }//GEN-LAST:event_list_filtrosFocusLost

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        if (tf_valor.getText().length()==0){
            JOptionPane.showMessageDialog(null,"Ingrese algún valor para efectuar la búsqueda", "Advertencia",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{

            if(list_filtros.getSelectedItem()=="Nombre"){
                Query = EntityManager.createNativeQuery( "SELECT * FROM asistencia a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE e.nombre like '%"
                    +tf_valor.getText() + "%'", Asistencia.class);
                List<Asistencia> a=Query.getResultList();
                if(a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Nombre Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                List.clear();
                List.addAll(a);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Apellido"){
                Query = EntityManager.createNativeQuery( "SELECT * FROM asistencia a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE e.apellido like '%"
                    +tf_valor.getText() + "%'", Asistencia.class);
                List<Asistencia> a=Query.getResultList();
                if(a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Apellido Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                List.clear();
                List.addAll(a);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Código Empleado"){
                Query = EntityManager.createNativeQuery( "SELECT * FROM asistencia a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE a.codigoEmpleado = "
                    +tf_valor.getText() , Asistencia.class);
                List<Asistencia> a=Query.getResultList();
                if(a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Empleado Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                List.clear();
                List.addAll(a);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Fecha"){
                String q="SELECT * FROM asistencia  "
                + "WHERE fechaAsistencia= '"
                +tf_valor.getText() + "'";
                System.out.println(q);
                Query = EntityManager.createNativeQuery( "SELECT * FROM asistencia  "
                    + "WHERE fechaAsistencia= '"
                    +tf_valor.getText() + "'", Asistencia.class);
                List<Asistencia> a=Query.getResultList();
                if(a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"No hay registros para la fecha indicada", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                List.clear();
                List.addAll(a);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Horas Trabajadas"){
                Query = EntityManager.createNativeQuery( "SELECT * FROM asistencia  "
                    + "WHERE HorasTrabajadas>= '"
                    +tf_valor.getText() + "'", Asistencia.class);
                List<Asistencia> a=Query.getResultList();
                if(a.isEmpty()){
                    JOptionPane.showMessageDialog(null,"No existen registros para la hora indicada", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                List.clear();
                List.addAll(a);
                return;
            }
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_buscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_buscarFocusLost
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_btn_buscarFocusLost

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        // TODO add your handling code here:
         int codEm;
         String fec;
        fila=masterTable.getSelectedRow();
        codEm=(Integer)masterTable.getValueAt(fila, 1);
        tf_codEmpleado.setText(Integer.toString(codEm));
        tf_datosEmp.setText(masterTable.getValueAt(fila, 2)+" "+masterTable.getValueAt(fila, 3));
        fec=formato.format( masterTable.getValueAt(fila, 4));
        tf_fechaAsist.setText(fec);
        tf_horaEntrada.setText((String) masterTable.getValueAt(fila, 5));
        tf_horaSalida.setText((String) masterTable.getValueAt(fila, 6));
        dc_fechaInicio.setDate((Date) masterTable.getValueAt(fila, 4));
         dc_fechaFin.setDate((Date) masterTable.getValueAt(fila, 4));
    }//GEN-LAST:event_masterTableMouseClicked

    private void list_filtrosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_list_filtrosFocusGained
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_list_filtrosFocusGained
    private void resetear(){
        tf_codEmpleado.setText(null);
        tf_descripcionE.setText(null);
        dc_fechaInicio.setDate(null);
        dc_fechaFin.setDate(null);
        tf_datosEmp.setText(null);
        tf_fechaAsist.setText(null);
        tf_horaEntrada.setText(null);
        tf_horaSalida.setText(null);
    }
    public int calcularDias(){
            float decimal;
            String d;
            /* DecimalFormat deci= new DecimalFormat("0");
             final float MILLSECS_PER_DAY = 24 * 60 * 60 * 1000;
             System.out.println("Día de la semana"+" "+dc_fechaInicio.getDate()+1);
             System.out.println("Fecha Inicio"+" "+ dc_fechaInicio.getDate().getTime());
             System.out.println("Fecha Fin"+" "+ dc_fechaFin.getDate().getTime());
             float cantidadDias = ((dc_fechaFin.getDate().getTime() - dc_fechaInicio.getDate().getTime())/MILLSECS_PER_DAY )+1;
             d=deci.format(cantidadDias);
             d=d.replaceAll(",",".");
             cantidadDias=Float.parseFloat(d);
             System.out.println("Cantidad Dias:"+" "+cantidadDias);
             return (int)cantidadDias;*/
            Calendar fechaInicial = new GregorianCalendar();
            Calendar fechaFinal= new GregorianCalendar();
            fechaInicial.setTime(dc_fechaInicio.getDate());
            fechaFinal.setTime(dc_fechaFin.getDate());
            System.out.println("Prueba fech 1"+" "+fechaInicial.getTime());
            System.out.println("Prueba fech 2"+" "+fechaFinal.getTime());
             int diffDays= 0;
            //mientras la fecha inicial sea menor o igual que la fecha final se cuentan los dias
             while (fechaInicial.getTime().before(fechaFinal.getTime())||fechaInicial.equals(fechaFinal)) {
                    if (fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY && fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY) {
                         diffDays++;
                         System.out.println("Cantidad Dias"+" "+diffDays);
                    }
                    fechaInicial.add(Calendar.DATE, 1);       
                    System.out.println("Iteracion"+" "+fechaInicial.getTime());
            }
            System.out.println("Cantidad Dias"+" "+diffDays);
            return diffDays;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new RegistrarEvento();
                frame.setVisible(true);
                Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                frame.setIconImage(icon);
                frame.setTitle("Registrar Evento");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setLocationRelativeTo(null);
            }
        });
    }
        private void inicializarLista(){
        Query = EntityManager.createNamedQuery("Empleado.findAll");
        List<Empleado> e = Query.getResultList();
        Iterator <Empleado> it = e.iterator();
        while (it.hasNext()){
           textAutoCompleter.addItem(it.next().getCodigoEmpleado());
        }
       // entityManager.close();
    }
       private Empleado obtenerEmpleado(){
        Query = EntityManager.createNamedQuery("Empleado.findByCodigoEmpleado");
        Query.setParameter("codigoEmpleado", Integer.parseInt(tf_codEmpleado.getText()));
        List<Empleado> em = Query.getResultList();
        Empleado emple = null;
        try{
            emple = em.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
      //  entityManager.close();
        return emple;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager EntityManager;
    private java.util.List<bean.Asistencia> List;
    private javax.persistence.Query Query;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_guardar;
    private com.toedter.calendar.JDateChooser dc_fechaFin;
    private com.toedter.calendar.JDateChooser dc_fechaInicio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_codEmpleado;
    private javax.swing.JLabel lbl_descripcionE;
    private javax.swing.JLabel lbl_fechaAsist;
    private javax.swing.JLabel lbl_fechaFin;
    private javax.swing.JLabel lbl_fechaInicio;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_horaEntrada;
    private javax.swing.JLabel lbl_horaSalida;
    private javax.swing.JLabel lbl_registrarActividad;
    private javax.swing.JLabel lbl_tipoEvento;
    private javax.swing.JLabel lbl_valor;
    private javax.swing.JComboBox list_filtros;
    private javax.swing.JComboBox list_tipoEvento;
    private javax.swing.JTable masterTable;
    private javax.swing.JPanel panel_regActividad;
    private javax.swing.JTextField tf_codEmpleado;
    private javax.swing.JTextField tf_datosEmp;
    private javax.swing.JTextField tf_descripcionE;
    private javax.swing.JTextField tf_fechaAsist;
    private javax.swing.JTextField tf_horaEntrada;
    private javax.swing.JTextField tf_horaSalida;
    private javax.swing.JTextField tf_valor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
