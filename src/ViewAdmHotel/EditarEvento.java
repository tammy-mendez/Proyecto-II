/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ViewAdmHotel;

import bean.AuditoriaSistema;
import bean.Empleado;
import bean.Eventos;
import java.awt.Image;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Jorge
 */
public class EditarEvento extends javax.swing.JFrame {
    private Eventos evento;
    private int fila;
    private int resp;
    DateFormat format=new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form EditarEvento
     */
    public EditarEvento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectoPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT e FROM Eventos e");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        panel_BuscarRol = new javax.swing.JPanel();
        lbl_BuscarRol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        dc_fechaInicio = new com.toedter.calendar.JDateChooser();
        tf_descripcion = new javax.swing.JTextField();
        lbl_codEmpleado = new javax.swing.JLabel();
        lbl_tipoEvento = new javax.swing.JLabel();
        lbl_descripcion = new javax.swing.JLabel();
        list_tipoEvento = new javax.swing.JComboBox();
        dc_fechaFin = new com.toedter.calendar.JDateChooser();
        tf_datosEmpl = new javax.swing.JTextField();
        lbl_fechaFin = new javax.swing.JLabel();
        lbl_fechaInicio = new javax.swing.JLabel();
        tf_codEmpleado = new javax.swing.JTextField();
        tf_codEvento = new javax.swing.JTextField();
        lbl_codEvento = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_guardar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tf_valor = new javax.swing.JTextField();
        lbl_valor = new javax.swing.JLabel();
        lbl_filtro = new javax.swing.JLabel();
        list_filtros = new javax.swing.JComboBox();
        btn_buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_BuscarRol.setBackground(new java.awt.Color(0, 153, 255));
        panel_BuscarRol.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_BuscarRol.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_BuscarRol.setForeground(new java.awt.Color(255, 255, 255));
        lbl_BuscarRol.setText("Modificar Evento");

        javax.swing.GroupLayout panel_BuscarRolLayout = new javax.swing.GroupLayout(panel_BuscarRol);
        panel_BuscarRol.setLayout(panel_BuscarRolLayout);
        panel_BuscarRolLayout.setHorizontalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BuscarRolLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(lbl_BuscarRol)
                .addGap(194, 194, 194))
        );
        panel_BuscarRolLayout.setVerticalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BuscarRolLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_BuscarRol)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_codEmpleado.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_codEmpleado.setText("Empleado:");

        lbl_tipoEvento.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_tipoEvento.setText("Tipo Evento:");

        lbl_descripcion.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_descripcion.setText("Descripción:");

        list_tipoEvento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Suspensión", "Permiso Justificado", "Vacaciones", "Horas Extras" }));

        tf_datosEmpl.setEditable(false);
        tf_datosEmpl.setBackground(new java.awt.Color(0, 153, 255));
        tf_datosEmpl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_datosEmpl.setForeground(new java.awt.Color(255, 255, 255));

        lbl_fechaFin.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_fechaFin.setText("Fecha Fin:");

        lbl_fechaInicio.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_fechaInicio.setText("Fecha Incio:");

        tf_codEmpleado.setEditable(false);
        tf_codEmpleado.setBackground(new java.awt.Color(0, 153, 255));
        tf_codEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_codEmpleado.setForeground(new java.awt.Color(255, 255, 255));

        tf_codEvento.setEditable(false);
        tf_codEvento.setBackground(new java.awt.Color(0, 153, 255));
        tf_codEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tf_codEvento.setForeground(new java.awt.Color(255, 255, 255));

        lbl_codEvento.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        lbl_codEvento.setText("Código Evento:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_codEvento)
                    .addComponent(lbl_tipoEvento)
                    .addComponent(lbl_fechaInicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tf_codEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(lbl_codEmpleado))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dc_fechaInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(list_tipoEvento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tf_codEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_datosEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_descripcion)
                            .addComponent(lbl_fechaFin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_descripcion)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dc_fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codEvento)
                    .addComponent(tf_codEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_codEmpleado)
                    .addComponent(tf_codEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_datosEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tipoEvento)
                    .addComponent(list_tipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_descripcion)
                    .addComponent(tf_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dc_fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_fechaInicio))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_fechaFin)
                            .addGap(1, 1, 1)))
                    .addComponent(dc_fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_guardar)
                .addGap(28, 28, 28)
                .addComponent(btn_cancelar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancelar))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setForeground(new java.awt.Color(204, 204, 255));

        tf_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_valorKeyTyped(evt);
            }
        });

        lbl_valor.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        lbl_filtro.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        lbl_filtro.setText("Buscar por:");

        list_filtros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código Empleado", "Nombre", "Apellido", "Tipo Evento", "Fecha Inicio", "Fecha Fin" }));
        list_filtros.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                list_filtrosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                list_filtrosFocusLost(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        btn_buscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_buscarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbl_filtro)
                .addGap(18, 18, 18)
                .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(lbl_valor)
                .addGap(18, 18, 18)
                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_buscar)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_filtro)
                    .addComponent(lbl_valor)
                    .addComponent(list_filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addContainerGap())
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idEvento}"));
        columnBinding.setColumnName("Evento");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.codigoEmpleado}"));
        columnBinding.setColumnName("Empleado");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoEmpleado.apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoEvento}"));
        columnBinding.setColumnName("Tipo Evento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descripcion}"));
        columnBinding.setColumnName("Descripcion");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${duracion}"));
        columnBinding.setColumnName("Duracion");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaInicio}"));
        columnBinding.setColumnName("Fecha Inicio");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaFin}"));
        columnBinding.setColumnName("Fecha Fin");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(40);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(90);
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(40);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(50);
            masterTable.getColumnModel().getColumn(8).setPreferredWidth(50);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel_BuscarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(145, 145, 145))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_BuscarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // TODO add your handling code here:
        String antes;
        String despues;
         if(tf_codEmpleado.getText().length()==0){
              JOptionPane.showMessageDialog(null,"Seleccione un evento", "Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        if( dc_fechaInicio.getDate()==null || dc_fechaFin.getDate()==null){
             JOptionPane.showMessageDialog(null,"No se admiten campos con valores nulos", "Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        if(dc_fechaFin.getDate().before(dc_fechaInicio.getDate())){
             JOptionPane.showMessageDialog(null,"Fechas incorrectas", "Error",JOptionPane.ERROR_MESSAGE);
             return;
        }
         resp=  JOptionPane.showConfirmDialog(null,"Desea guardar los cambios?", "Confirmar Modificación",JOptionPane.YES_NO_OPTION );
         if (resp==JOptionPane.YES_OPTION){
                 entityManager.getTransaction().begin();
                 query=entityManager.createNamedQuery("Eventos.findByIdEvento");
                 query.setParameter("idEvento", Integer.parseInt(tf_codEvento.getText()));
                 Eventos e=(Eventos) query.getSingleResult();
                 antes=e.toString();
                 Eventos ev=new Eventos();
                 ev.setIdEvento(Integer.parseInt(tf_codEvento.getText()));
                 ev.setCodigoEmpleado(obtenerEmpleado());
                 ev.setDescripcion(tf_descripcion.getText());
                 try{
                     ev.setFechaFin(format.parse(format.format(dc_fechaFin.getDate())));
                     ev.setFechaInicio(format.parse(format.format(dc_fechaInicio.getDate())));
                     
                 } catch (ParseException ex) {
                 Logger.getLogger(EditarEvento.class.getName()).log(Level.SEVERE, null, ex);
                 }              
                 ev.setDuracion(calcularDias());
                 ev.setTipoEvento((String) list_tipoEvento.getSelectedItem());
                 entityManager.merge(ev);
                 entityManager.flush();
                 despues=ev.toString();
                 //registramos los datos necesarios para la auditoria
                 AuditoriaSistema as=new AuditoriaSistema();
                 as.setAccion("Modificación");
                 as.setTabla("Evento");
                 as.setAntes(antes);
                 as.setDespues(despues);
                 //trabajamos con la fecha
                 Date fecha=new Date();
                 DateFormat formato=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                 as.setFechaHora(formato.format(fecha));
                 as.setUsuario("nadie");
                 entityManager.persist(as);
                 entityManager.getTransaction().commit();
                 JOptionPane.showMessageDialog(null, "Modificación Exitosa");
                 list.remove(e);
                 list.add(ev);
                 resetear();
             
          }else{
                 this.dispose();
         }
        
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void tf_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_valorKeyTyped
        // TODO add your handling code here:
        char ch;
        if (list_filtros.getSelectedItem()=="Código Empleado"){
            ch=evt.getKeyChar();
            if(!Character.isDigit(ch)){
                getToolkit().beep();
                evt.consume();
            }
        }else{
            if (list_filtros.getSelectedItem()=="Nombre" || list_filtros.getSelectedItem()=="Apellido"
                ||list_filtros.getSelectedItem()=="Tipo Evento"){
                ch=evt.getKeyChar();
                if(Character.isDigit(ch)){
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_tf_valorKeyTyped

    private void list_filtrosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_list_filtrosFocusLost
        // TODO add your handling code here:
        if(list_filtros.getSelectedItem()=="Fecha Inicio" || list_filtros.getSelectedItem()=="Fecha Fin"  ){
            Date fecha= new Date();
            DateFormat formato=new SimpleDateFormat("yyyy-MM-dd");
            tf_valor.setText(formato.format(fecha));
        }
    }//GEN-LAST:event_list_filtrosFocusLost

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        if (tf_valor.getText().length()==0){
            JOptionPane.showMessageDialog(null,"Ingrese algún valor para efectuar la búsqueda", "Advertencia",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{

            if(list_filtros.getSelectedItem()=="Nombre"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE e.nombre like '%"
                    +tf_valor.getText() + "%'", Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Nombre Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Apellido"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE e.apellido like '%"
                    +tf_valor.getText() + "%'", Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Apellido Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Código Empleado"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos a "
                    + "INNER JOIN empleado e "
                    + "on a.codigoEmpleado = e.codigoEmpleado "
                    + "WHERE a.codigoEmpleado = "
                    +tf_valor.getText() , Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"Empleado Inexistente", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Fecha Inicio"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos  "
                    + "WHERE fecha_inicio= '"
                    +tf_valor.getText() + "'", Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"No hay registros para la fecha indicada", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Fecha Fin"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos  "
                    + "WHERE fecha_fin= '"
                    +tf_valor.getText() + "'", Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"No hay registros para la fecha indicada", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
            else if(list_filtros.getSelectedItem()=="Tipo Evento"){
                query = entityManager.createNativeQuery( "SELECT * FROM eventos  "
                    + "WHERE tipo_evento LIKE '%"
                    +tf_valor.getText() + "%'", Eventos.class);
                List<Eventos> ev=query.getResultList();
                if(ev.isEmpty()){
                    JOptionPane.showMessageDialog(null,"No existen registros para dicho  evento", "Error",JOptionPane.ERROR_MESSAGE);
                    tf_valor.setText(null);
                    return;
                }
                list.clear();
                list.addAll(ev);
                return;
            }
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_buscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_buscarFocusLost
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_btn_buscarFocusLost

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        // TODO add your handling code here:
         fila=masterTable.getSelectedRow();
          obtenerEvento(fila);
         inicializarEvento();
    }//GEN-LAST:event_masterTableMouseClicked

    private void list_filtrosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_list_filtrosFocusGained
        // TODO add your handling code here:
        tf_valor.setText(null);
    }//GEN-LAST:event_list_filtrosFocusGained
    private void inicializarEvento(){
        tf_codEvento.setText(Integer.toString(evento.getIdEvento()));
        tf_codEmpleado.setText(Integer.toString(evento.getCodigoEmpleado().getCodigoEmpleado()));
        tf_datosEmpl.setText(evento.getCodigoEmpleado().getNombre()+" "+evento.getCodigoEmpleado().getApellido());
        list_tipoEvento.setSelectedItem(evento.getTipoEvento());
        tf_descripcion.setText(evento.getDescripcion());
        dc_fechaInicio.setDate(evento.getFechaInicio());
        dc_fechaFin.setDate(evento.getFechaFin());
    }
     private void resetear(){
        tf_codEvento.setText(null);
        tf_codEmpleado.setText(null);
        tf_datosEmpl.setText(null);
        tf_descripcion.setText(null);
        dc_fechaInicio.setDate(null);
        dc_fechaFin.setDate(null);
    }
     private void obtenerEvento(int fila) {
            query=entityManager.createNamedQuery("Eventos.findByIdEvento");
            query.setParameter("idEvento", Integer.parseInt(masterTable.getValueAt(fila, 0).toString()) );
           
            try{
               evento = (Eventos)query.getSingleResult();
               System.out.println(evento);
            }catch(javax.persistence.NoResultException e){
                System.out.println(evento);
            }
      }
       public int calcularDias(){
           /*  float decimal;
             String d;
             DecimalFormat deci= new DecimalFormat("0");
             final float MILLSECS_PER_DAY = 24 * 60 * 60 * 1000;
             System.out.println("Fecha Inicio"+" "+ dc_fechaInicio.getDate().getTime());
             System.out.println("Fecha Fin"+" "+ dc_fechaFin.getDate().getTime());
             float cantidadDias = ((dc_fechaFin.getDate().getTime() - dc_fechaInicio.getDate().getTime())/MILLSECS_PER_DAY )+1;
             d=deci.format(cantidadDias);
             d=d.replaceAll(",",".");
             cantidadDias=Float.parseFloat(d);
             System.out.println("Cantidad Dias:"+" "+cantidadDias);
             return (int)cantidadDias;*/
            Calendar fechaInicial = new GregorianCalendar();
            Calendar fechaFinal= new GregorianCalendar();
            fechaInicial.setTime(dc_fechaInicio.getDate());
            fechaFinal.setTime(dc_fechaFin.getDate());
            System.out.println("Prueba fech 1"+" "+fechaInicial.getTime().getDate());
            System.out.println("Prueba fech 2"+" "+fechaFinal.getTime().getDate());
             int diffDays=0;
            //mientras la fecha inicial sea menor o igual que la fecha final se cuentan los dias
             while (fechaInicial.before(fechaFinal)||fechaInicial.equals(fechaFinal)) {
                    if (fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY && fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY) {
                         diffDays++;
                         System.out.println("Cantidad Dias"+" "+diffDays);
                    }
                    fechaInicial.add(Calendar.DATE, 1);       
                    System.out.println("Iteracion"+" "+fechaInicial.getTime());
            }
           /* if (fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY && fechaInicial.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY) {
                         diffDays++;
                         System.out.println("Cantidad Dias"+" "+diffDays);
             }*/
            System.out.println("Cantidad Dias"+" "+diffDays);
            return diffDays;
    }
        private Empleado obtenerEmpleado(){
        query = entityManager.createNamedQuery("Empleado.findByCodigoEmpleado");
        query.setParameter("codigoEmpleado", Integer.parseInt(tf_codEmpleado.getText()));
        List<Empleado> em = query.getResultList();
        Empleado emple = null;
        try{
            emple = em.get(0);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }catch(NullPointerException e){
            System.out.println(e);
        }catch(Exception e){
            System.out.println("Algo pasó");
        }
      //  entityManager.close();
        return emple;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new EditarEvento();
                frame.setVisible(true);
                frame.setTitle("Modificar Evento");
                Image icon = new ImageIcon(getClass().getResource("/imagenes/hotel2.png")).getImage();
                frame.setIconImage(icon);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_guardar;
    private com.toedter.calendar.JDateChooser dc_fechaFin;
    private com.toedter.calendar.JDateChooser dc_fechaInicio;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_BuscarRol;
    private javax.swing.JLabel lbl_codEmpleado;
    private javax.swing.JLabel lbl_codEvento;
    private javax.swing.JLabel lbl_descripcion;
    private javax.swing.JLabel lbl_fechaFin;
    private javax.swing.JLabel lbl_fechaInicio;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_tipoEvento;
    private javax.swing.JLabel lbl_valor;
    private java.util.List<bean.Eventos> list;
    private javax.swing.JComboBox list_filtros;
    private javax.swing.JComboBox list_tipoEvento;
    private javax.swing.JTable masterTable;
    private javax.swing.JPanel panel_BuscarRol;
    private javax.persistence.Query query;
    private javax.swing.JTextField tf_codEmpleado;
    private javax.swing.JTextField tf_codEvento;
    private javax.swing.JTextField tf_datosEmpl;
    private javax.swing.JTextField tf_descripcion;
    private javax.swing.JTextField tf_valor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
